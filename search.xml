<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python学习笔记</title>
      <link href="/posts/python-note.html"/>
      <url>/posts/python-note.html</url>
      
        <content type="html"><![CDATA[<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ol><li>分析问题，明确结果</li><li>思考需要的知识</li><li>思考切入点</li><li>尝试解决一部分</li><li>重复1-4步</li></ol><hr><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p><code>\a</code>  响铃（BEL）</p><p><code>\b</code>退格（BS）将当前位置移动到前一列</p><p><code>\f</code>换页（FF）将当前位置移动到下一页开头</p><p><code>\n</code>换行（LF）将当前位置下行开头</p><p><code>\r</code>回车（CR）将当前位置移动到本行开头</p><p><code>\t</code>水平制表（HT）（跳到下一个TAB位置）</p><p><code>\v</code>垂直制表（VT）</p><p><code>\\</code>代表一个反斜线字符 “&quot;</p><p><code>\&#39;</code>代表一个单引号</p><p><code>\&#39;&#39;</code>代表一个双引号</p><p><code>\0</code>空字符</p><p><code>\ddd</code>1到3位八进制所代表的任意字符</p><p><code>\xhh</code>1到2位十六进制所代表的任意字符</p><hr><h2 id="Print"><a href="#Print" class="headerlink" title="Print"></a>Print</h2><p>Print():  </p><pre><code>单引号不管啥都可打印双引号可以引出内容的标点符号三引号跨行输出具体</code></pre><p><code>/n</code>实现换行:</p><pre><code>Print(XXX,/nXXX,/nXXX)</code></pre><p><img src="https://pckxin.coding.net/p/yuki-img-cn/d/ID-0202/git/raw/master/img/Note/print-p1.png" alt="print"></p><hr><h2 id="变量-amp-赋值"><a href="#变量-amp-赋值" class="headerlink" title="变量&amp;赋值"></a>变量&amp;赋值</h2><h3 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h3><p>例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&#x27;小埋&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">输出：小埋</span><br></pre></td></tr></table></figure><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&#x27;小埋&#x27;</span></span><br><span class="line">name=<span class="string">&#x27;02&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">输出：02</span><br></pre></td></tr></table></figure><h3 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h3><ol><li><p>只能是一个词</p></li><li><p>只能包含字母</p></li><li><p>不能以数字开头</p></li><li><p>尽量描述包含数据的内容</p></li><li><p>不能使用python函数名或关键字</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A = 2  赋值</span><br><span class="line">A == 2 等于</span><br></pre></td></tr></table></figure><hr><h2 id="数据类型-amp-应用-amp-转换"><a href="#数据类型-amp-应用-amp-转换" class="headerlink" title="数据类型&amp;应用&amp;转换"></a>数据类型&amp;应用&amp;转换</h2><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><ol><li><p><strong>字符串（string  -  str）:</strong></p><p> 类型有：现实的词，语句，表达式<br> 必须有引号否则报错<br> 有引号的是字符串，没有的是整数</p></li><li><p><strong>整数（integer  -  int）:</strong></p><p> 不带小数点的数字，正负都可</p></li><li><p><strong>浮点数（float）:</strong></p><p> 带小数点的数字，运算结果存在误差</p></li></ol><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>四则运算：符号</p><p><img src="https://pckxin.coding.net/p/yuki-img-cn/d/ID-0202/git/raw/master/img/Note/operator-p1.png" alt="符号"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XX += 1   #意思是XX =XX+1</span><br></pre></td></tr></table></figure><p><strong>字符串拼接：</strong></p><pre><code>类型相同 +号拼接</code></pre><p><strong>数据类型的查询——type()函数</strong></p><pre><code>例：print(type(&#39;查询的内容&#39;))</code></pre><h3 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h3><p><code>Str()</code>函数：将其他数据类型转换成字符串   （也可用引号转换）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：number = <span class="number">153</span>，code = <span class="string">&#x27;通行密码&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(who+destination+code+action+<span class="built_in">str</span>(number))</span><br></pre></td></tr></table></figure><p><code>Int()</code>函数：将其他数据类型转换成整数   (直接抹零不做四舍五入处理)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">例：number1 = <span class="string">&#x27;6&#x27;</span>     number2 = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">       <span class="built_in">print</span>(<span class="built_in">int</span>(number1)+<span class="built_in">int</span>(number2))</span><br><span class="line"></span><br><span class="line">浮点形式的字符串 <span class="built_in">print</span>(<span class="built_in">int</span>(<span class="string">&#x27;3.8&#x27;</span>))不能转换，</span><br><span class="line">浮点数 <span class="built_in">print</span>(<span class="built_in">int</span>(<span class="number">3.8</span>))可以</span><br></pre></td></tr></table></figure><p><code>Float()</code> 函数：将其他数据类型转换成浮点数（字符串也可，除文字类字符串😅）</p><hr><h2 id="条件判断-amp-嵌套"><a href="#条件判断-amp-嵌套" class="headerlink" title="条件判断&amp;嵌套"></a>条件判断&amp;嵌套</h2><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><ol><li><strong>单项判断</strong>   <code>if:</code></li></ol><p>#条件后记得跟进英文冒号，回车后自动缩进</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX ：</span><br><span class="line">缩进 <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>双向判断</strong>  <code>if…else… :</code></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(XXXX)</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>多项判断</strong>  <code>if…elif…else… :</code></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#条件1不满足执行</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#同上</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:   <span class="comment">#以上条件都不满足后执行</span></span><br><span class="line">Print(XXXX)</span><br></pre></td></tr></table></figure><h3 id="if嵌套"><a href="#if嵌套" class="headerlink" title="if嵌套"></a>if嵌套</h3><pre><code>if嵌套执行顺序：           #根据层级执行    #缩进相同的命令同等级，一条一条处理        1.先赋值        2.代码组1——不满足60直接跳到代码组2        3.代码组2——代码组1未满足执行</code></pre><p><img src="https://pckxin.coding.net/p/yuki-img-cn/d/ID-0202/git/raw/master/img/Note/example-p1.png" alt="嵌套例子"></p><hr><h2 id="input-函数"><a href="#input-函数" class="headerlink" title="input()函数"></a>input()函数</h2><p><code>input()</code>函数 <strong>结果必须赋值</strong></p><p><strong>使用：</strong></p><pre><code>input(&#39;XXXX&#39;)#提问&amp;收集数据</code></pre><p><strong>结果赋值：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XXXX = input(&#x27;XXXX&#x27;)</span><br></pre></td></tr></table></figure><p><strong>数据类型：</strong></p><pre><code>input返回的类型是 str(字符串)赋值时需要转换：abc = &#39;XX&#39;</code></pre><p><strong>input输出结果强制转换：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Abc = int(input(&#x27;XXXX&#x27;))</span><br></pre></td></tr></table></figure><h3 id="解题思路例"><a href="#解题思路例" class="headerlink" title="解题思路例"></a>解题思路例</h3><ol><li>函数结果赋值</li><li>搜集信息</li><li>条件判断</li></ol><p>#2.1强制转换 #另一种情况</p><p>#3.1条件判断 #另一种情况</p><ol start="4"><li>条件判断</li><li>输出结果</li></ol><hr><h2 id="列表-amp-字典-amp-元组"><a href="#列表-amp-字典-amp-元组" class="headerlink" title="列表&amp;字典&amp;元组"></a>列表&amp;字典&amp;元组</h2><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p><img src="https://pckxin.coding.net/p/yuki-img-cn/d/ID-0202/git/raw/master/img/Note/list-p1.png" alt="list"></p><p><strong>列表内偏移量起始值为0</strong></p><p><strong>提取单个元素：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A = [01,02,03]</span><br><span class="line">Print(a[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p><strong>提取多个元素:</strong></p><pre><code>切片口诀：左右空，取到头；        左取右不取    #冒号是切片</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">Print(a[:]) <span class="comment">#打印出[1，2，3，4，5]</span></span><br><span class="line">Print(a[<span class="number">2</span>:]) <span class="comment">#[3，4，5]</span></span><br><span class="line">Print(a[:<span class="number">2</span>]) <span class="comment">#[1，2]</span></span><br><span class="line">Print(a[<span class="number">1</span>:<span class="number">3</span>]) <span class="comment">#[2，3]</span></span><br><span class="line">Print(a[<span class="number">2</span>:<span class="number">4</span>]) <span class="comment">#[3，4]</span></span><br></pre></td></tr></table></figure><p><strong>注：</strong>大小A是一个意思，都是列表A，为了不混淆记忆才这么标的，正式编码时要统一</p><p><strong>列表添加&#x2F;删除元素：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">添加：append()函数</span><br><span class="line">用法：   列表名.append()</span><br><span class="line">注：每次只能增加一个元素</span><br><span class="line"></span><br><span class="line">删除：del 语句</span><br><span class="line">用法： del 列表名[元素的索引（偏移量）]</span><br></pre></td></tr></table></figure><h3 id="数据类型：字典"><a href="#数据类型：字典" class="headerlink" title="数据类型：字典"></a>数据类型：字典</h3><p><strong>与列表不同处：大括号</strong></p><p><img src="https://pckxin.coding.net/p/yuki-img-cn/d/ID-0202/git/raw/master/img/Note/dictionary-p1.png" alt="字典"></p><p>字典里的元素由 <code>键值对</code> 组成<br>    #例：’小明’:95  ‘小明’ 叫<strong>键</strong>（key）95叫<strong>值</strong>（value）<br>    字典里一样的键的键值对，后面的会覆盖前面</p><p><code>Len()函数</code> #查询字典或列表长度（元素个数）</p><p><strong>例:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>]</span><br><span class="line">b = &#123;<span class="string">&#x27;明&#x27;</span>:<span class="number">12</span>,<span class="string">&#x27;刚&#x27;</span>:<span class="number">13</span>,<span class="string">&#x27;王&#x27;</span>:<span class="number">14</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(a))   <span class="comment">#结果4</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(b))   <span class="comment">#结果3</span></span><br></pre></td></tr></table></figure><p><strong>增加键值对：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">字典名[&#x27;XXX&#x27;] = 值</span><br><span class="line">例：字典1[&#x27;psp&#x27;] = &#x27;ppspp&#x27;</span><br></pre></td></tr></table></figure><p><strong>删除键值对：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Del 字典名[键]</span><br><span class="line">例：del 字典2[&#x27;03&#x27;]</span><br></pre></td></tr></table></figure><p><strong>字典与列表的异同</strong></p><p><strong>不同点：</strong>列表中元素位置明确，即使元素相同</p><p><strong>相同点：</strong><br>1.修改元素都可用赋值语句完成</p><p>2.支持任意嵌套和互相嵌套例：</p><p><img src="https://pckxin.coding.net/p/yuki-img-cn/d/ID-0202/git/raw/master/img/Note/difference-p1.png" alt="列表字典异同"></p><h3 id="元组tuple"><a href="#元组tuple" class="headerlink" title="元组tuple"></a>元组tuple</h3><p><strong>用小括号包，其他与列表一样</strong></p><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tuple1 = (<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">list2 = [(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>),(<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>),(<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>)]</span><br><span class="line"><span class="built_in">print</span>(tuple1[<span class="number">0</span>])      <span class="comment">#结果：A</span></span><br><span class="line"><span class="built_in">print</span>(list2[<span class="number">1</span>][<span class="number">1</span>])      <span class="comment">#结果：D</span></span><br></pre></td></tr></table></figure><hr><h2 id="循环注"><a href="#循环注" class="headerlink" title="循环注"></a>循环注</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">知道次数优先for循环</span><br><span class="line"></span><br><span class="line">不知道用while循环设置`哨兵`</span><br><span class="line"></span><br><span class="line">#哨兵意思大概是循环极限次数</span><br></pre></td></tr></table></figure><hr><h2 id="for…in循环"><a href="#for…in循环" class="headerlink" title="for…in循环"></a>for…in循环</h2><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="comment"># i在列表里过一遍</span></span><br></pre></td></tr></table></figure><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> o <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>):            </span><br><span class="line"><span class="comment">#range函数输出：0-10</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>+<span class="built_in">str</span>(o)+<span class="string">&#x27;天&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>Range(x)</code>函数:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">从0生成X-1整数序列</span><br><span class="line"></span><br><span class="line">例：range(a,b,c) 从 a 数到 b-1（取头不取尾），间隔为 C</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">Print(i)   <span class="comment">#输出0，2，4，6，8</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">range</span>(a,b,c)</span><br><span class="line">a:计数从a开始，不填时，默认从<span class="number">0</span>开始</span><br><span class="line"><span class="comment">#例如:range（1，5）#计数从1开始生成</span></span><br><span class="line">b:计数到b结束，不包括b</span><br><span class="line"><span class="comment">#例如:range(11)#计数从0到11，不包括11</span></span><br><span class="line">c:计数的间隔，不填时默认为<span class="number">1</span></span><br><span class="line"><span class="comment">#例如:range(0，30，5)#计数间隔为5</span></span><br></pre></td></tr></table></figure><h3 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;小明&#x27;</span>:<span class="string">&#x27;醋&#x27;</span>,<span class="string">&#x27;小红&#x27;</span>:<span class="string">&#x27;油&#x27;</span>,<span class="string">&#x27;小白&#x27;</span>:<span class="string">&#x27;盐&#x27;</span>,<span class="string">&#x27;小张&#x27;</span>:<span class="string">&#x27;米&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> q <span class="keyword">in</span> d:</span><br><span class="line">    <span class="built_in">print</span>(d[q])</span><br><span class="line"><span class="comment">#输出：醋，油，柴，米</span></span><br></pre></td></tr></table></figure><h4 id="第四种"><a href="#第四种" class="headerlink" title="第四种"></a>第四种</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">8</span>):  <span class="comment"># 为同时能运行两个循环，设新参数 m。</span></span><br><span class="line">    <span class="keyword">if</span> m != <span class="number">4</span>:  <span class="comment"># 当   m != 4，执行打印语句；等于4时不打印。 # ! = 不等于</span></span><br><span class="line">        <span class="built_in">print</span>(m)</span><br></pre></td></tr></table></figure><h3 id="从零到100分别x5"><a href="#从零到100分别x5" class="headerlink" title="从零到100分别x5"></a>从零到100分别x5</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> q <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">print</span>(q*<span class="number">5</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><h3 id="第一种-1"><a href="#第一种-1" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">0</span>          <span class="comment">#先定义变量a，并赋值</span></span><br><span class="line"><span class="keyword">while</span> a &lt; <span class="number">5</span>:   <span class="comment"># 设定一个放行条件：a要小于5，才能办事</span></span><br><span class="line">    a = a + <span class="number">1</span>  <span class="comment"># 满足条件时，就办事：将a+1</span></span><br><span class="line">    <span class="built_in">print</span>(a)   <span class="comment"># 继续办事：将a+1的结果打印出来</span></span><br></pre></td></tr></table></figure><h3 id="第二种-1"><a href="#第二种-1" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">man = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 注：&#x27;&#x27;代表空字符串</span></span><br><span class="line"><span class="keyword">while</span> man != <span class="string">&#x27;有&#x27;</span>:  <span class="comment">#注：!=代表不等于</span></span><br><span class="line">​   man = <span class="built_in">input</span>(<span class="string">&#x27;有没有愿意为小龙女死的男人？没有的话就不能出古墓。&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小龙女可以出古墓门下山啦~&#x27;</span>)</span><br><span class="line">a = <span class="number">0</span>  <span class="comment"># 定义了一个变量a</span></span><br></pre></td></tr></table></figure><h3 id="第三种-1"><a href="#第三种-1" class="headerlink" title="第三种"></a>第三种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> a &lt; <span class="number">5</span>:  <span class="comment"># 当a小于5的时候，就自动执行后续缩进部分的语句</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;现在a的值是：&#x27;</span> + <span class="built_in">str</span>(a))</span><br><span class="line">    <span class="comment">#加一个print看看现在的a是多少</span></span><br><span class="line">    a = a + <span class="number">1</span>  <span class="comment"># 每执行一次循环，变量a的值都加1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;加1后a的值是：&#x27;</span> + <span class="built_in">str</span>(a)) </span><br><span class="line">    <span class="comment">#加一个print看看加1后的a是多少</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><h3 id="从零到100分别x5-1"><a href="#从零到100分别x5-1" class="headerlink" title="从零到100分别x5"></a>从零到100分别x5</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> a&lt;<span class="number">101</span></span><br><span class="line">    a=a+<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(a*<span class="number">5</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="pop-函数"><a href="#pop-函数" class="headerlink" title="pop()函数"></a>pop()函数</h2><p>**提取:**取到元素，对列表没有影响；</p><p>**删除:**删除列表的元素。</p><p>**pop()**函数用于移除列表中的一个元素（默认最后一个元素），并且返回该元素的值。</p><p><strong>语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.pop(obj=list[-1]) </span><br><span class="line">#默认为index=-1，删除最后一个元素。</span><br><span class="line">obj是可选参数，也可以指定元素对象。</span><br></pre></td></tr></table></figure><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">students = [<span class="string">&#x27;小明&#x27;</span>,<span class="string">&#x27;小红&#x27;</span>,<span class="string">&#x27;小刚&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">student1 = students.pop(<span class="number">0</span>)  </span><br><span class="line"><span class="comment"># 运用pop()函数，同时完成提取和删除。</span></span><br><span class="line">students.append(student1)  </span><br><span class="line"><span class="comment"># 将移除的student1安排到最后一个座位。</span></span><br><span class="line"><span class="built_in">print</span>(students)</span><br></pre></td></tr></table></figure><hr><h2 id="布尔值与布尔运算"><a href="#布尔值与布尔运算" class="headerlink" title="布尔值与布尔运算"></a>布尔值与布尔运算</h2><p><strong>用数据做逻辑的过程叫 布尔运算</strong></p><p><strong>运算产生布尔值</strong></p><p>布尔值分 <code>true</code>（真）和 <code>false</code>（假）</p><p><strong>比较运算符：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">等于：  ==</span><br><span class="line">不等于：  !=</span><br><span class="line">大于：  &gt;</span><br><span class="line">小于：  &lt;</span><br><span class="line">大于等于：  &gt;=</span><br><span class="line">小于等于：  &lt;=</span><br></pre></td></tr></table></figure><p><strong>布尔运算：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span>()函数：</span><br><span class="line">括号里放入判断用数据，判断真假</span><br><span class="line">打印出来：</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(XXXX))</span><br></pre></td></tr></table></figure><p><strong>两个数值做比较：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">And:</span><br><span class="line">Ture and true真 </span><br><span class="line">True and false假</span><br><span class="line">False and true假</span><br><span class="line">False and false假</span><br><span class="line"></span><br><span class="line">or:</span><br><span class="line">True and true真</span><br><span class="line">True or false真</span><br><span class="line">False or true真</span><br><span class="line">False or false假</span><br><span class="line"></span><br><span class="line">Not:</span><br><span class="line">Not true假</span><br><span class="line">Not false  真</span><br></pre></td></tr></table></figure><hr><h2 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h2><p><strong>循环内部使用</strong></p><p><code>if…break</code> 意思是满足某一条件，提前结束循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>循环写法：</span><br><span class="line"><span class="keyword">for</span>……<span class="keyword">in</span>……:</span><br><span class="line">…</span><br><span class="line">If ….:</span><br><span class="line">Break</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>循环写法：</span><br><span class="line"><span class="keyword">while</span> XXXX：</span><br><span class="line">…</span><br><span class="line">If …:</span><br><span class="line">Break</span><br></pre></td></tr></table></figure><p><strong>while例子：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">While ture :   <span class="comment">#true是条件恒为真，开启无限循环，搭配break结束</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;上供一对童男童女&#x27;</span>)  </span><br><span class="line">t = <span class="built_in">input</span>(<span class="string">&#x27;孙悟空来了吗&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> t == <span class="string">&#x27;来了&#x27;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;孙悟空制服了鲤鱼精，陈家庄再也不用上供童男童女了&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="concinue语句"><a href="#concinue语句" class="headerlink" title="concinue语句"></a>concinue语句</h2><p>满足条件继续执行下一个，不满足提前重置循环</p><h3 id="continue语句搭配for循环"><a href="#continue语句搭配for循环" class="headerlink" title="continue语句搭配for循环"></a>continue语句搭配for循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>...<span class="keyword">in</span>… :</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> ...:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="continue语句搭配while循环"><a href="#continue语句搭配while循环" class="headerlink" title="continue语句搭配while循环"></a>continue语句搭配while循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>...XXXX:</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> ...:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">..</span><br></pre></td></tr></table></figure><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">q1 = <span class="built_in">input</span>(<span class="string">&#x27;第一问：你喜欢萝莉吗?&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> q1 != <span class="string">&#x27;喜欢&#x27;</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;答对了，行，下面第二问：&#x27;</span>)</span><br><span class="line">q2 = <span class="built_in">input</span>(<span class="string">&#x27;三次元还是二次元的&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> q2 != <span class="string">&#x27;二次元&#x27;</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;答对了，看来是同道中人，下面第三问：&#x27;</span>)</span><br><span class="line">q3 = <span class="built_in">input</span>(<span class="string">&#x27;对三次元萝莉有兴趣吗&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> q3 == <span class="string">&#x27;没有&#x27;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;欢迎来到萝莉社&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="pass语句"><a href="#pass语句" class="headerlink" title="pass语句"></a>pass语句</h2><p><strong>满足跳过，不满足继续执行</strong></p><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个整数:&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> a &gt;= <span class="number">100</span>:</span><br><span class="line"><span class="keyword">pass</span>        <span class="comment">#大于等于100，终端什么都没有输出，直接结束</span></span><br><span class="line"><span class="keyword">else</span>:         <span class="comment">#反之</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你输入了一个小于100的数字&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="else语句"><a href="#else语句" class="headerlink" title="else语句"></a>else语句</h2><p><strong>else还可搭配for循环和while循环</strong></p><p><strong>注：别跟傻狗似的看见 i 又迷惑了，i 等于缩进下的指令</strong></p><p><strong>注：a 是循环用的，没看见夹中间了吗</strong></p><h3 id="for例"><a href="#for例" class="headerlink" title="for例"></a>for例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入0来结束循环，你有5次机会:&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你触发了break语句，循环结束，导致else语句不会生效。&#x27;</span>)    </span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;5次循环你都错过了，else语句生效了。&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="while例"><a href="#while例" class="headerlink" title="while例"></a>while例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">5</span>:</span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入0结束循环，你有5次机会:&#x27;</span>)) </span><br><span class="line">i = i+<span class="number">1</span></span><br><span class="line">If a == <span class="number">0</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你触发了break语句，导致else语句不会生效。&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;5次循环你都错过了，else语句生效了。&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>当循环中没有碰到break语句，就会执行循环后面的else语句，否则就不会执行</strong></p><hr><h2 id="import函数"><a href="#import函数" class="headerlink" title="import函数"></a>import函数</h2><p><strong>意：导入模块函数</strong></p><h3 id="上例"><a href="#上例" class="headerlink" title="上例"></a>上例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time   <span class="comment">#调用time模块</span></span><br><span class="line">time.sleep(secs)   </span><br><span class="line"><span class="comment">#使用time模块下面的sleep()函数,括号里填的是间隔的秒数（seconds，简称secs）</span></span><br><span class="line"><span class="comment">#time.sleep(1.5)就表示停留1.5秒再运行后续代码</span></span><br></pre></td></tr></table></figure><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Random模块下 randint()函数 #随机整数</span><br><span class="line"></span><br><span class="line">用法：random.randint(1,100) #1-100随机整数</span><br><span class="line"></span><br><span class="line">Time模块下 sleep()函数 #间隔时间</span><br></pre></td></tr></table></figure><hr><h2 id="代码视觉优化"><a href="#代码视觉优化" class="headerlink" title="代码视觉优化"></a>代码视觉优化</h2><p><strong>格式化字符串：</strong></p><p><code>%</code>后面有一个字母s，这是一个类型码</p><p>用来控制数据显示的类型。<code>%s</code>就表示先占一个字符串类型的位置</p><h3 id="第一种-2"><a href="#第一种-2" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lucky = <span class="number">8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我的幸运数字是%d&#x27;</span> % lucky)     <span class="comment">#输出：我的幸运数字是8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我的幸运数字是%d&#x27;</span> % <span class="number">8</span>)           <span class="comment">#输出：我的幸运数字是8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我的幸运数字是%s&#x27;</span> % <span class="string">&#x27;816&#x27;</span>)    <span class="comment">#输出：我的幸运数字是816</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我的幸运数字是%d和%d&#x27;</span> % (<span class="number">8</span>,<span class="number">16</span>))    <span class="comment">#输出：我的幸运数字是8和16</span></span><br></pre></td></tr></table></figure><p><code>%</code>后面补上要填的内容，省掉转换类型，多个数据就放进括号</p><p><code>%s</code> 字符串显示</p><p><code>%f</code> 浮点数显示</p><p><code>%d</code> 整数显示</p><h3 id="第二种-更方便"><a href="#第二种-更方便" class="headerlink" title="第二种(更方便)"></a>第二种(更方便)</h3><p><code>format()</code>函数：</p><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">format</span>()格式化函数：<span class="built_in">str</span>.<span class="built_in">format</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#123;&#125;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;数字：&#x27;</span>,<span class="number">0</span>))  <span class="comment"># 优势1：不用担心用错类型码。</span></span><br><span class="line"><span class="comment">#输出：数字：0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;，&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">0</span>,<span class="number">1</span>))  <span class="comment"># 不设置指定位置时，默认按顺序对应。</span></span><br><span class="line"><span class="comment">#输出：0，1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;1&#125;，&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">0</span>,<span class="number">1</span>))  <span class="comment"># 优势2：当设置指定位置时，按指定的对应。</span></span><br><span class="line"><span class="comment">#输出：1，0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125;，&#123;1&#125;，&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">0</span>,<span class="number">1</span>))  <span class="comment"># 优势3：可多次调用format后的数据。</span></span><br><span class="line"><span class="comment">#输出：0，1，0</span></span><br><span class="line"></span><br><span class="line">name2 =  <span class="string">&#x27;Python基础语法&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我正在学&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name2))  <span class="comment"># format()函数也接受通过参数传入数据。</span></span><br><span class="line"><span class="comment">#输出：我正在学Python基础语法</span></span><br></pre></td></tr></table></figure><hr><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><strong>函数是组织好的，可以重复使用的，用来实现单一功能的代码</strong></p><h3 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h3><p><img src="https://pckxin.coding.net/p/yuki-img-cn/d/ID-0202/git/raw/master/img/Note/function-p1.png" alt="函数"></p><p><strong>参数&#x3D;自变量</strong></p><h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p><strong>语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def 函数名(参数名):</span><br><span class="line">函数体</span><br><span class="line">return 语句</span><br></pre></td></tr></table></figure><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">math</span>(<span class="params">x</span>):</span><br><span class="line"><span class="comment"># math是自己定义的函数名字（不能与内置函数重名）</span></span><br><span class="line"><span class="comment"># 最好体现意义</span></span><br><span class="line"><span class="comment"># x是自己定义的参数名，括号里参数可多可少，也可不带，命名规则和函数名相同</span></span><br><span class="line"><span class="comment"># 规范别忘带，括号后面还有冒号，运行出错首先检查</span></span><br><span class="line">y = <span class="number">3</span>*x + <span class="number">5</span></span><br><span class="line"><span class="comment"># 函数体：定义函数的功能</span></span><br><span class="line"><span class="keyword">return</span> y</span><br><span class="line"><span class="comment"># 返回结果y</span></span><br></pre></td></tr></table></figure><h3 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h3><p><strong>话不多说，直接上例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">math</span>(<span class="params">x</span>):</span><br><span class="line">y =  x ** <span class="number">2</span> + x</span><br><span class="line"><span class="keyword">return</span> y</span><br><span class="line">x=math(<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 赋值X = math(10)# 这是给X赋值不等于参数x，参数x变成10，并在函数体里过了一遍</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="comment"># 打印出结果</span></span><br><span class="line"></span><br><span class="line">也有这种例子：</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">opening</span>():</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;总有一种味道能温暖你～&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;深夜食堂正式开业啦！&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;欢迎来自五湖四海的你前来品尝!&#x27;</span>)</span><br><span class="line">opening()</span><br><span class="line"><span class="comment">#定义opening()函数固定打印出这三句话</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#也不需要return语句，原因是这个函数直接在屏幕打印出内容，不需要返回值。事实上，没有return语句的函数，Python也会在末尾隐性地加上return None，即返回None值。</span></span><br></pre></td></tr></table></figure><h3 id="参数类型"><a href="#参数类型" class="headerlink" title="参数类型"></a>参数类型</h3><p><strong>【位置参数】上例开讲：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">menu</span>(<span class="params">appetizer, course</span>):</span><br><span class="line"><span class="comment">#感觉像什么，没错，menu函数括号里的是【位置参数】，定义完后期随加随用</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;一份开胃菜：&#x27;</span> + appetizer)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;一份主食：&#x27;</span> + course)</span><br><span class="line">menu(<span class="string">&#x27;话梅花生&#x27;</span>,<span class="string">&#x27;牛肉拉面&#x27;</span>)</span><br><span class="line">menu(<span class="string">&#x27;花生&#x27;</span>,<span class="string">&#x27;面&#x27;</span>)   </span><br><span class="line"><span class="comment">#如果后面括号位置参数的定义更新了，终端会按照定义顺序输出</span></span><br><span class="line">menu(course = <span class="string">&#x27;面&#x27;</span>, appetizer = <span class="string">&#x27;花生&#x27;</span>)</span><br><span class="line"><span class="comment">#如果直接定义了，就忽视顺序，还是按顺序输出</span></span><br></pre></td></tr></table></figure><p><strong>列表传参：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">bala</span>(<span class="params">food</span>):</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> food:</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">fruits = [<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;cherry&quot;</span>]</span><br><span class="line"></span><br><span class="line">bala(fruits)</span><br><span class="line"><span class="comment">#列表挨个输出</span></span><br></pre></td></tr></table></figure><p><strong>【不定长参数】上例开讲：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在不知道传递给函数的参数数量时在参数前面加个*号</span><br><span class="line">例：</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">menu</span>(<span class="params">*barbeque</span>):</span><br><span class="line"><span class="comment">#这样就可以传任意长度的参数了</span></span><br></pre></td></tr></table></figure><h3 id="返回多个值"><a href="#返回多个值" class="headerlink" title="返回多个值"></a>返回多个值</h3><p><strong>上例才能理解：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random </span><br><span class="line"><span class="comment">#导入random模块</span></span><br><span class="line">appetizer = [<span class="string">&#x27;话梅花生&#x27;</span>,<span class="string">&#x27;拍黄瓜&#x27;</span>,<span class="string">&#x27;凉拌三丝&#x27;</span>]</span><br><span class="line"><span class="comment">#随机在这里取</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">coupon</span>(<span class="params">money</span>):</span><br><span class="line"><span class="comment">#定义coupon(money)函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> money &lt; <span class="number">5</span>:</span><br><span class="line">a = random.choice(appetizer)</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line"><span class="comment">#如果参数小于5，返回赋予a的随机值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="number">5</span> &lt;= money &lt; <span class="number">10</span>:</span><br><span class="line">b = random.choice(appetizer)</span><br><span class="line"><span class="keyword">return</span> b, <span class="string">&#x27;溏心蛋&#x27;</span></span><br><span class="line"><span class="comment">#如果大于5小于10，返回赋予b的随机值，和第二个指定值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第一种输出方式：</span></span><br><span class="line">result = coupon(<span class="number">6</span>)</span><br><span class="line"><span class="comment">#定义一个叫result的元组内容等与函数coupon的输出值</span></span><br><span class="line"><span class="comment">#括号里的money参数=6</span></span><br><span class="line"><span class="built_in">print</span>(result[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(result[<span class="number">1</span>])</span><br><span class="line"><span class="comment">#遍历result元组，挨个打印</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第二种输出方式：</span></span><br><span class="line">dish, egg = coupon (<span class="number">7</span>)</span><br><span class="line"><span class="comment">#输出的两个元素分别赋值给变量dish和egg</span></span><br><span class="line"><span class="built_in">print</span>(dish)</span><br><span class="line"><span class="built_in">print</span>(egg)</span><br></pre></td></tr></table></figure><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><p><strong>我去了，读了3个小时才完全理解</strong></p><p><strong>说明：</strong><br>    只有全局变量才能随取随用<br>    第一点：在函数内部赋值的变量仅能在该函数内部使用   叫做：局部作用域，它们被称作【局部变量】<br>    第二点：在所有函数之外赋值的变量，可以在程序的任何位置使用  叫做：全局作用域，它们被称作【全局变量】<br>        注：局部作用域不能用在其他作用域的变量<br><strong>上例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">rent = <span class="number">3000</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cost</span>():</span><br><span class="line"><span class="keyword">global</span> variable_cost</span><br><span class="line"><span class="comment">#global语句，后跟需要声明是全局变量的变量</span></span><br><span class="line">utilities = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入本月的水电费用&#x27;</span>))</span><br><span class="line">food_cost = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入本月的食材费用&#x27;</span>))</span><br><span class="line">variable_cost = utilities + food_cost</span><br><span class="line"><span class="comment">#上面全是全局变量</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;本月的变动成本是&#x27;</span> + <span class="built_in">str</span>(variable_cost))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sum_cost</span>():</span><br><span class="line"><span class="built_in">sum</span> = rent + variable_cost</span><br><span class="line"><span class="comment">#函数下的sum属于局部变量</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;本月的总成本是&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">sum</span>))</span><br><span class="line">cost()</span><br><span class="line">sum_cost()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="函数的嵌套"><a href="#函数的嵌套" class="headerlink" title="函数的嵌套"></a>函数的嵌套</h3><p><strong>上例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">div</span>(<span class="params">num1, num2</span>):</span><br><span class="line">growth = (num1 - num2) / num2</span><br><span class="line">percent = <span class="built_in">str</span>(growth * <span class="number">100</span>) + <span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">return</span> percent</span><br><span class="line"><span class="comment">#一号函数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">warning</span>():</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Error: 你确定上个月一毛钱都不赚不亏吗？&#x27;</span>)</span><br><span class="line"><span class="comment">#二号函数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">num1 = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入本月所获利润&#x27;</span>))</span><br><span class="line">num2 = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入上月所获利润&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> num2 == <span class="number">0</span>:</span><br><span class="line">warning()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;本月的利润增长率：&#x27;</span> + div(num1,num2))</span><br><span class="line">Break</span><br><span class="line"><span class="comment">#三号主函数组，嵌套了一号和二号，按主函数组顺序运行</span></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义两个函数：第一个函数功能为根据工作月数返回奖金额，第二个函数功能为打印出&#x27;该员工来了XX个月，获得奖金XXX元&#x27;。</span></span><br><span class="line"><span class="comment">#最后传入参数(&#x27;大聪&#x27;，14)调用第二个函数，打印结果&#x27;大聪来了14个月，获得奖金2520元&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">buff</span>(<span class="params">month</span>):</span><br><span class="line"><span class="keyword">if</span> month&lt;<span class="number">6</span>:</span><br><span class="line">a = <span class="number">500</span></span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line"><span class="keyword">elif</span> <span class="number">6</span> &lt;= month &lt;= <span class="number">12</span>:</span><br><span class="line">b = month * <span class="number">120</span></span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">c = month * <span class="number">180</span></span><br><span class="line"><span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gamer</span>():</span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;输入名字：&#x27;</span>)</span><br><span class="line">month = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;干了几个月？&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(name,month,<span class="string">&#x27;个月&#x27;</span>,<span class="string">&#x27;奖金:&#x27;</span>,buff(month))</span><br><span class="line"></span><br><span class="line">gamer()</span><br></pre></td></tr></table></figure><hr><h2 id="index函数"><a href="#index函数" class="headerlink" title="index函数"></a>index函数</h2><p><code>index()</code>函数用于找出列表中某个元素第一次出现的索引位置。</p><p><strong>语法为：列表名字.index(查找对象名字)</strong></p><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">num = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(num.index(<span class="number">1</span>))  <span class="comment"># 数字1首先出现的索引位置是list[1]（索引位置从0开始）</span></span><br><span class="line"><span class="built_in">print</span>(num.index(<span class="number">2</span>))  <span class="comment"># 数字2首先出现的索引位置是list[4]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>可能比较难理解，上大例子：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="comment"># 出拳</span></span><br><span class="line">punches = [<span class="string">&#x27;石头&#x27;</span>,<span class="string">&#x27;剪刀&#x27;</span>,<span class="string">&#x27;布&#x27;</span>]</span><br><span class="line">computer_choice = random.choice(punches)</span><br><span class="line">user_choice = <span class="string">&#x27;&#x27;</span></span><br><span class="line">user_choice = <span class="built_in">input</span>(<span class="string">&#x27;请出拳：（石头、剪刀、布）&#x27;</span>)  <span class="comment"># 请用户输入选择</span></span><br><span class="line"><span class="keyword">while</span> user_choice <span class="keyword">not</span> <span class="keyword">in</span> punches:  <span class="comment"># 当用户输入错误，提示错误，重新输入</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;输入有误，请重新出拳&#x27;</span>)</span><br><span class="line">user_choice = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 亮拳</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;————战斗过程————&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;电脑出了：%s&#x27;</span> % computer_choice)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你出了：%s&#x27;</span> % user_choice)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 胜负</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;—————结果—————&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> user_choice == computer_choice:  <span class="comment"># 使用if进行条件判断</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;平局！&#x27;</span>)</span><br><span class="line"><span class="comment"># 电脑的选择有3种，索引位置分别是：0石头、1剪刀、2布。</span></span><br><span class="line"><span class="comment"># 假设在电脑索引位置上减1，对应：-1布，0石头，1剪刀，皆胜。</span></span><br><span class="line"><span class="keyword">elif</span> user_choice == punches[punches.index(computer_choice)-<span class="number">1</span>]:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你赢了！&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你输了！&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="try…except语句"><a href="#try…except语句" class="headerlink" title="try…except语句"></a>try…except语句</h2><p><strong>语法：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="comment">#尝试执行下列代码</span></span><br><span class="line">XXX</span><br><span class="line">XXX</span><br><span class="line">Except 报错名称:</span><br><span class="line"><span class="comment">#报错后执行这些</span></span><br><span class="line">XXX</span><br><span class="line">XXX</span><br><span class="line">Except 报错名称:   <span class="comment">#可重复多个报错条件</span></span><br><span class="line">XXX</span><br><span class="line">XXX</span><br><span class="line"></span><br><span class="line">方式<span class="number">2</span>：将两个（或多个）异常放在一起，只要触发其中一个，就执行所包含的代码。</span><br><span class="line"><span class="keyword">except</span>(ZeroDivisionError,ValueError):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你的输入有误，请重新输入！&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">方式<span class="number">3</span>：常规错误的基类，假设不想提供很精细的提示，可以用这个语句响应常规错误。</span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你的输入有误，请重新输入！&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">age = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;你今年几岁了？&#x27;</span>))</span><br><span class="line">Break     </span><br><span class="line"><span class="comment">#是整数停止，跳过下面直接执行下段代码</span></span><br><span class="line"><span class="keyword">except</span> ValueError:       </span><br><span class="line"><span class="comment">#输入的不是整数报错后执行</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你输入的不是数字！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> age &lt; <span class="number">18</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;不可以喝酒噢&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="debug方法"><a href="#debug方法" class="headerlink" title="debug方法"></a>debug方法</h2><h3 id="自检清单："><a href="#自检清单：" class="headerlink" title="自检清单："></a>自检清单：</h3><ol><li>漏了末尾冒号</li><li>缩进错误</li><li>中英文符号没变</li><li>没有定义变量</li><li>‘&#x3D;&#x3D;’ 和 ‘&#x3D;’ 混用</li><li>字符串拼接时将数字和字符串拼一起了</li></ol><p><strong>解决思路不清：</strong></p><p><strong>#号和 print() 函数搭配使用，一段段检查代码</strong></p><hr><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h3 id="简单总结"><a href="#简单总结" class="headerlink" title="简单总结:"></a>简单总结:</h3><p><strong>类的创建：</strong>class语句</p><p><strong>类的属性创建：</strong>赋值语句</p><p><strong>实例方法的创建：</strong>def 名字(self):</p><p><strong>类的实例化：</strong><code>实例名 = 类名( )</code></p><p><strong>调用类的属性：</strong><code>实例名.属性</code></p><p><strong>调用类的方法：</strong><code>实例名.方法( )</code></p><p>什么什么类的东西</p><p>例如电子设备，list #列表类</p><h3 id="不同点："><a href="#不同点：" class="headerlink" title="不同点："></a>不同点：</h3><p>现实中的类的属性和方法是客观存在的</p><p>编程中类的属性和方法是人工创建的</p><h3 id="类是存在共同点的"><a href="#类是存在共同点的" class="headerlink" title="类是存在共同点的"></a>类是存在共同点的</h3><p>第一种叫<strong>属性(attribute)</strong></p><p>第二种叫<strong>方法(method)</strong></p><pre><code>例如：列表的属性有：外层有中括号，元素之间用英文逗号隔开方法有：都可以做增删改操作（如 append、del等）</code></pre><h3 id="类的创建："><a href="#类的创建：" class="headerlink" title="类的创建："></a>类的创建：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>:    <span class="comment">#class + 类名 + 冒号</span></span><br><span class="line"></span><br><span class="line">screen = <span class="literal">True</span>    <span class="comment">#属性，通过赋值语句    ， 这句意思是有屏幕</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):    <span class="comment">#方法创建，def + 方法名(self):</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;电脑正在开机中……&#x27;</span>)    <span class="comment">#方法执行过程，也叫能做什么</span></span><br><span class="line">注：实例方法是指类中  参数  带self  的函数，是类方法的一种形式，也是最常用的用法，其他方法可查档</span><br></pre></td></tr></table></figure><h3 id="类的调用："><a href="#类的调用：" class="headerlink" title="类的调用："></a>类的调用：</h3><p><strong>类的实例化：</strong></p><p>在某一个类下创建个实例对象：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语法：实例名 = 类名()</span><br><span class="line">例子：这是想到的实例名 = 这是刚创建的类名加个( )</span><br><span class="line">意义：有了一个可调用 所属类 的 所有属性 和 方法 的实例</span><br></pre></td></tr></table></figure><p><strong>例例例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">people</span>:</span><br><span class="line"><span class="comment"># 属性:眼睛是黑色的</span></span><br><span class="line">eye = <span class="string">&#x27;black&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法:打印出 &#x27;吃饭，选择用筷子。&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">chpe</span>(<span class="params">self</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;吃饭，选择用筷子。&#x27;</span>)</span><br><span class="line"></span><br><span class="line">my_eye = people()   <span class="comment">#创建了my_eye这个实例，等于people这个类</span></span><br><span class="line"><span class="comment">#也就是类的实例化</span></span><br><span class="line"><span class="comment">#实例数目理论上无限，可以同时多建</span></span><br><span class="line"><span class="built_in">print</span>(my_eye.eye)    <span class="comment">#实例调用属性</span></span><br><span class="line">my_eye.chpe()   <span class="comment">#让实例调用用chpe这个方法</span></span><br></pre></td></tr></table></figure><h3 id="创建类的两个关键点"><a href="#创建类的两个关键点" class="headerlink" title="创建类的两个关键点"></a>创建类的两个关键点</h3><p><strong>特殊参数：self</strong></p><p><strong>作用：</strong>self会接收实例化过程中传入的数据，相当于先给实例占个位置</p><p>想要在类的外部调用类属性格式：<code>self.属性名</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">**例：**</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Chinese</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greeting</span>(<span class="params">self</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;很高兴遇见你&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">say</span>(<span class="params">self</span>):</span><br><span class="line">self.greeting()    <span class="comment">#person.greeting()</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我来自中国&#x27;</span>)</span><br><span class="line"><span class="comment">#self被传入数据后变成person</span></span><br><span class="line">person = Chinese()</span><br><span class="line"><span class="comment"># 创建实例person</span></span><br><span class="line">person.say()</span><br><span class="line"><span class="comment"># 调用say()方法</span></span><br></pre></td></tr></table></figure><p><strong>初始化方法：</strong></p><p><strong>格式：</strong>def <strong>init</strong>(self)：</p><p><strong>作用：</strong>当每个实例创建时，该方法内代码无需调用就会自动运行</p>]]></content>
      
      
      <categories>
          
          <category> StudyNote </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法</title>
      <link href="/posts/markdown.html"/>
      <url>/posts/markdown.html</url>
      
        <content type="html"><![CDATA[<h1 id="一级"><a href="#一级" class="headerlink" title="一级"></a>一级</h1><h2 id="二级"><a href="#二级" class="headerlink" title="二级"></a>二级</h2><h3 id="三级"><a href="#三级" class="headerlink" title="三级"></a>三级</h3><h4 id="四级"><a href="#四级" class="headerlink" title="四级"></a>四级</h4><h5 id="五级"><a href="#五级" class="headerlink" title="五级"></a>五级</h5><h6 id="六级"><a href="#六级" class="headerlink" title="六级"></a>六级</h6><hr><p>正文直接输入，换行空一行</p><p>换行</p><hr><p>代码块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;hello,world&quot;)</span><br></pre></td></tr></table></figure><p>代码块语法高亮：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    <span class="string">&quot;hello,world&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>正文中的代码块 <code>print(&quot;hello,world&quot;)</code></p><hr><p>列表：</p><p>有序列表：</p><ol><li>直接输入数字加句点后跟一个空格<ol><li>多级回车加缩进</li></ol></li></ol><p>无序列表:</p><p>减号后跟空格</p><ul><li>123<ul><li>123<ul><li>123</li></ul></li></ul></li></ul><hr><p>字体：</p><p><strong>加粗</strong></p><p><em>斜体</em></p><p><em><strong>加粗斜体</strong></em></p><hr><p>分割线方法：</p><p>1.***</p><p>2.—</p><hr><p>删除线：</p><p>两边加两个~就OK</p><p>记住是英文的符号</p><p><del>lalala</del></p><hr><p>下划线：</p><p>通过html的 &lt; u &gt; 标签实现</p><p><u>用法</u></p><hr><p>图片：</p><p>用.&#x2F;来引用本地文件夹的图片</p><p>网络图片用链接</p><p><img src="/./test01.png" alt="图片标题" title="图片链接"></p><p>调整比例</p><img src=./test01.png width=50% />---]]></content>
      
      
      
        <tags>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试02</title>
      <link href="/posts/test002.html"/>
      <url>/posts/test002.html</url>
      
        <content type="html"><![CDATA[<p><strong>条件判断：</strong></p><p>单项判断   <code>if:</code></p><p>#条件后记得跟进英文冒号，回车后自动缩进</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX ：</span><br><span class="line">缩进 <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><p>双向判断  <code>if…else… :</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(XXXX)</span><br></pre></td></tr></table></figure><p>多项判断  <code>if…elif…else… :</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#条件1不满足执行</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#同上</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:   <span class="comment">#以上条件都不满足后执行</span></span><br><span class="line">Print(XXXX)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> StudyNote </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试01</title>
      <link href="/posts/test001.html"/>
      <url>/posts/test001.html</url>
      
        <content type="html"><![CDATA[<p><strong>条件判断：</strong></p><p>单项判断   <code>if:</code></p><p>#条件后记得跟进英文冒号，回车后自动缩进</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX ：</span><br><span class="line">缩进 <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><p>双向判断  <code>if…else… :</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(XXXX)</span><br></pre></td></tr></table></figure><p>多项判断  <code>if…elif…else… :</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#条件1不满足执行</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#同上</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:   <span class="comment">#以上条件都不满足后执行</span></span><br><span class="line">Print(XXXX)</span><br></pre></td></tr></table></figure><p><strong>if嵌套：</strong></p><pre><code>if嵌套执行顺序：           #根据层级执行    #缩进相同的命令同等级，一条一条处理        1.先赋值        2.代码组1——不满足60直接跳到代码组2        3.代码组2——代码组1未满足执行</code></pre><div align="center"><p><img src="/./img/noteimg/02.png" alt="nested"></p>]]></content>
      
      
      <categories>
          
          <category> StudyNote </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/Hello-World.html"/>
      <url>/posts/Hello-World.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
