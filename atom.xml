<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nagisaのにちじょう</title>
  
  <subtitle>Nagisa的日常</subtitle>
  <link href="https://pckxin.pro/atom.xml" rel="self"/>
  
  <link href="https://pckxin.pro/"/>
  <updated>2022-11-03T02:38:28.483Z</updated>
  <id>https://pckxin.pro/</id>
  
  <author>
    <name>Nagisa</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS学习笔记</title>
    <link href="https://pckxin.pro/posts/js-note.html"/>
    <id>https://pckxin.pro/posts/js-note.html</id>
    <published>2022-11-03T01:33:07.000Z</published>
    <updated>2022-11-03T02:38:28.483Z</updated>
    
    <content type="html"><![CDATA[<h2 id="W3C-HTML-DOM标准"><a href="#W3C-HTML-DOM标准" class="headerlink" title="W3C HTML DOM标准"></a>W3C HTML DOM标准</h2><pre><code>1.整个文档是一个文档节点2.每个HTML元素是一个元素节点3.HTML元素内文本是文本节点4.HTML属性是属性节点</code></pre><h2 id="使用DOM树能干什么"><a href="#使用DOM树能干什么" class="headerlink" title="使用DOM树能干什么"></a>使用DOM树能干什么</h2><pre><code>1.JavaScript 能够改变页面中的所有HTML元素2.JavaScript 能够改变页面中的所有HTML属性3.JavaScript 能够改变页面中的所有CSS样式4.JavaScript 能对页面中所有事件作出反应</code></pre><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>JavaScript</code>是由美国网景通信公司开发的一种跨平台网页，面向对象<code>object-oriented</code>网页脚本语言</p><p><code>JavaScript</code>代码可以直接嵌入HTML文件中，随着网页一起传送到客户端浏览器，然后通过浏览器来解释执行</p><p>JS是前端开发的的核心语言，基于事件和驱动的解释性，松散型语言</p><p>JS的解释性，松散型理解？</p><pre><code>1. 解释性：边执行边解释，在浏览器环境下运行2. 松散型：定义变量的时候，不需要强类型，直接弱类型，定义的变量不需要声明类型</code></pre><hr><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><pre><code>1. 脚本编写语言2. 基于对象    可以被看作是一种面向对象的语言，这意味着JavaScript能运用其已经创建的对象。因此，许多功能可以来自于脚本环境中对象的方法与脚本的相互作用3. 跨平台性4. 事件驱动5. 简单弱类型    JavaScript是一种基于Java基本语句和控制流之上的简单而紧凑的设计    变量类型是采用弱类型，并未使用严格的数据类型6. 解释性执行    不像这些语言需要先编译，而是在程序运行过程中被逐行地解释</code></pre><hr><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><pre><code>1. 实现动态页面(将动态内容添加到页面中)2. 数据验证3. 响应事件4. 可以检测浏览器</code></pre><hr><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">onclick 单击事件</span><br><span class="line"></span><br><span class="line">ondblclick 双击事件</span><br><span class="line"></span><br><span class="line">onmouseout 鼠标移出</span><br><span class="line"></span><br><span class="line">onmouseover 鼠标移入</span><br><span class="line"></span><br><span class="line">onscroll 元素滚动事件</span><br><span class="line"></span><br><span class="line">onmousewheel 鼠标轮滚动事件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="几种常见弹窗方式"><a href="#几种常见弹窗方式" class="headerlink" title="几种常见弹窗方式"></a>几种常见弹窗方式</h3><pre><code>alert(&quot;&quot;); 提示框带确认按钮输出方式: document.write(&quot;&quot;);confirm(&quot;&quot;)弹出个确认框，待确认的取消按钮prompt(&#39;显示信息内容&#39;); 弹出个输入框, 让你输入东西</code></pre><h3 id="书写格式"><a href="#书写格式" class="headerlink" title="书写格式"></a>书写格式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 自定义变量名 = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;名字&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="comment">//声明</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span> <span class="comment">//文档内</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> 方法名()&#123;</span><br><span class="line">    自定义变量名.属性名=<span class="string">&quot;属性值&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">自定义变量名.事件名=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    自定义变量名.属性名=<span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getElementById <span class="comment">//get 获取 Element 元素 Id 选择器</span></span><br></pre></td></tr></table></figure><h4 id="改HTML最简单的方法是使用innerHTML属性"><a href="#改HTML最简单的方法是使用innerHTML属性" class="headerlink" title="改HTML最简单的方法是使用innerHTML属性"></a>改HTML最简单的方法是使用<code>innerHTML</code>属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">标签的文字内容用innerHTML修改</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;内容&quot;</span>;</span><br><span class="line"></span><br><span class="line">输入框的值用value修改</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;&quot;</span>).<span class="property">value</span>=<span class="string">&quot;内容&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="改HTML样式使用"><a href="#改HTML样式使用" class="headerlink" title="改HTML样式使用"></a>改HTML样式使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementByid</span>(<span class="string">&quot;&quot;</span>).<span class="property">style</span>.属性=<span class="string">&quot;值&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><pre><code>储存数据的容器例：var x = 1</code></pre><h3 id="后台输出"><a href="#后台输出" class="headerlink" title="后台输出"></a>后台输出</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">typeof</span> 查看变量类型</span><br><span class="line"></span><br><span class="line"><span class="attr">typeof</span>:运算符  判断数据类型</span><br><span class="line"></span><br><span class="line">声明未赋值 变量返回<span class="title class_">Underfind</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="获取变量值"><a href="#获取变量值" class="headerlink" title="获取变量值"></a>获取变量值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">变量名.<span class="property">value</span></span><br><span class="line"></span><br><span class="line">b.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    p.<span class="property">innerHTML</span> = a.<span class="property">value</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="检测类型"><a href="#检测类型" class="headerlink" title="检测类型"></a>检测类型</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">typef 变量名</span><br><span class="line"></span><br><span class="line">方便用法：<span class="title function_">alert</span>(typef 变量名)</span><br></pre></td></tr></table></figure><h3 id="元素属性和属性值在JS获取中运用（动态获取元素属性值）"><a href="#元素属性和属性值在JS获取中运用（动态获取元素属性值）" class="headerlink" title="元素属性和属性值在JS获取中运用（动态获取元素属性值）"></a>元素属性和属性值在JS获取中运用（动态获取元素属性值）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">.<span class="title function_">setProperty</span>(属性,属性值) </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><pre><code>声明在函数之外的变量声明变量时没有var关键字时就默认为全局变量</code></pre><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><pre><code>声明在函数体内的变量只能在当前函数体内访问声明变量时没有var关键字时就默认为全局变量</code></pre><h3 id="JS基本数据类型"><a href="#JS基本数据类型" class="headerlink" title="JS基本数据类型"></a>JS基本数据类型</h3><pre><code>1. number 数值类型    包括整数和浮点数2. string  字符串类型    用单引号或双引号括起来的零个或多个单一的字符所组成3. boollean 布尔类型    取值为true 和 false4. underfined  未定义值5. null 空类型    null取值只有null</code></pre><h3 id="字符串转换数字"><a href="#字符串转换数字" class="headerlink" title="字符串转换数字"></a>字符串转换数字</h3><p>字符串汉字开头和字母开头不能转</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>()仅能返回整数</span><br><span class="line">直接截取整数部分</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">parseFloat</span>() 字符串转浮点型</span><br><span class="line">只取到第一个小数点</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Number</span>() 转换数值包括整数和浮点数</span><br></pre></td></tr></table></figure><h3 id="数组的书写格式"><a href="#数组的书写格式" class="headerlink" title="数组的书写格式"></a>数组的书写格式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> 数组名 = <span class="keyword">new</span> <span class="title class_">Array</span>(元素名,元素名,元素名,元素名)</span><br><span class="line"><span class="comment">// 完整</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> 数组名 = [元素名,元素名,元素名,元素名]</span><br><span class="line"><span class="comment">// 简写</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="class搭配数组使用"><a href="#class搭配数组使用" class="headerlink" title="class搭配数组使用"></a>class搭配数组使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> 变量名 = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;类名&quot;</span>)</span><br><span class="line">    变量名[下标].属性 = <span class="string">&quot;属性值&quot;</span>  <span class="comment">// 不是重新设数组，看第几个class按下标走</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h3><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//for 循环，遍历多个数组length长度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> 变量名 = 赋值 ; 变量名&lt;数组名.<span class="property">length</span> ; 变量名++)&#123;</span><br><span class="line">    数组名[变量名].事件名 = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">数组名  <span class="comment">// 准备循环的数组名</span></span><br><span class="line"></span><br><span class="line">变量名  <span class="comment">//  循环定义的变量名</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">color</span> <span class="comment">//this 元素本身的意思</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="while循环—等待更新"><a href="#while循环—等待更新" class="headerlink" title="while循环—等待更新"></a>while循环—等待更新</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(判断条件)&#123;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">------</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>()&#123;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>()&#123;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ <span class="comment">// 加</span></span><br><span class="line">- <span class="comment">// 减</span></span><br><span class="line">* <span class="comment">// 乘</span></span><br><span class="line"><span class="regexp">/ /</span><span class="regexp">/ 除</span></span><br><span class="line"><span class="regexp">% /</span><span class="regexp">/ 取模取余</span></span><br><span class="line"><span class="regexp">++ /</span><span class="regexp">/ 自增运算符</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">-- /</span><span class="regexp">/ 自减运算符</span></span><br><span class="line"><span class="regexp"></span></span><br></pre></td></tr></table></figure><h4 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment">//大于</span></span><br><span class="line">&lt; <span class="comment">//小于</span></span><br><span class="line">&gt;= <span class="comment">//大于等于</span></span><br><span class="line">&lt;= <span class="comment">//小于等于</span></span><br><span class="line">=  <span class="comment">// 赋值</span></span><br><span class="line">==  <span class="comment">// 等于</span></span><br><span class="line">!=  <span class="comment">//不等于</span></span><br><span class="line">===  <span class="comment">//全等于</span></span><br><span class="line">!==  <span class="comment">//不全等</span></span><br></pre></td></tr></table></figure><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//多条件连接符</span></span><br><span class="line"></span><br><span class="line">&amp;&amp; 逻辑与运算  <span class="comment">//多条件全都满足才能输出</span></span><br><span class="line"></span><br><span class="line">|| 逻辑与运算  <span class="comment">// 所有条件满足其一，可以输出</span></span><br><span class="line"></span><br><span class="line">! 逻辑非运算   <span class="comment">// </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">= 赋值</span><br><span class="line"></span><br><span class="line">+=   <span class="comment">//a = a+b  a += b</span></span><br><span class="line"></span><br><span class="line">-=</span><br><span class="line"></span><br><span class="line">*=</span><br><span class="line"></span><br><span class="line">/=</span><br><span class="line"></span><br><span class="line">%=</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="自增-amp-自减"><a href="#自增-amp-自减" class="headerlink" title="自增&amp;自减"></a>自增&amp;自减</h3><h4 id="在后例子："><a href="#在后例子：" class="headerlink" title="++在后例子："></a>++在后例子：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">变量设为i</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> a = i++;  <span class="comment">//i先将自身的值赋值给变量a，然后再自增1</span></span><br><span class="line"><span class="title function_">alert</span>(a)  <span class="comment">//输出1</span></span><br><span class="line"><span class="title function_">alert</span>(i)  <span class="comment">//输出2</span></span><br><span class="line">          <span class="comment">// ++在后，先计算表达式，再给i自加1</span></span><br></pre></td></tr></table></figure><h4 id="在前例子"><a href="#在前例子" class="headerlink" title="++在前例子"></a>++在前例子</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">变量设为i</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i = <span class="number">1</span>; </span><br><span class="line"><span class="keyword">var</span> a = ++i; <span class="comment">//i先将自身的值自增1，再将自增后的值赋值给变量a</span></span><br><span class="line"><span class="title function_">alert</span>(a)  <span class="comment">//输出2</span></span><br><span class="line"><span class="title function_">alert</span>(i)  <span class="comment">//输出2</span></span><br><span class="line">          <span class="comment">// ++在前，先给自身加1，再计算表达式</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="–在后例子："><a href="#–在后例子：" class="headerlink" title="–在后例子："></a>–在后例子：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">变量设为i</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">var</span> a = i--;  <span class="comment">//i先将自身的值赋值给变量a，然后再自减1</span></span><br><span class="line"><span class="title function_">alert</span>(a)  <span class="comment">//输出4</span></span><br><span class="line"><span class="title function_">alert</span>(i)  <span class="comment">//输出3</span></span><br><span class="line">          <span class="comment">// --在后，先计算表达式，再给i自减1</span></span><br></pre></td></tr></table></figure><h4 id="–在前例子："><a href="#–在前例子：" class="headerlink" title="–在前例子："></a>–在前例子：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">变量设为i</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">var</span> a = --i;  <span class="comment">//i先将自身的值自减1,再将自减后的值赋值给变量a</span></span><br><span class="line"><span class="title function_">alert</span>(a)  <span class="comment">//输出3</span></span><br><span class="line"><span class="title function_">alert</span>(i)  <span class="comment">//输出3</span></span><br><span class="line">          <span class="comment">// --在前，先给自身减1，再计算表达式</span></span><br></pre></td></tr></table></figure><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">setInterval</span>(变量名, 时间) <span class="comment">//定时器</span></span><br><span class="line"><span class="number">1000</span> = 1s</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="滚动事件"><a href="#滚动事件" class="headerlink" title="滚动事件"></a>滚动事件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span>  </span><br><span class="line"><span class="comment">//鼠标滚动到身体顶部</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span>; </span><br><span class="line"> <span class="comment">//鼠标滚动到所有元素顶部</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="保留两位小数"><a href="#保留两位小数" class="headerlink" title="保留两位小数"></a>保留两位小数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">toFixed</span>(<span class="number">2</span>) <span class="comment">//保留两位小数</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="过渡效果"><a href="#过渡效果" class="headerlink" title="过渡效果"></a>过渡效果</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">transition</span>:all 1s 过渡效果</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="功能效果实现"><a href="#功能效果实现" class="headerlink" title="功能效果实现"></a>功能效果实现</h3><h4 id="生成随机四位字符串"><a href="#生成随机四位字符串" class="headerlink" title="生成随机四位字符串"></a>生成随机四位字符串</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">slice</span>(-<span class="number">8</span>)</span><br><span class="line">    <span class="comment">// Math.random()  生成随机数字</span></span><br><span class="line">    <span class="comment">// .toString(36)  转化成36进制</span></span><br><span class="line">    <span class="comment">// .slice(-4) 取最后四位</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;W3C-HTML-DOM标准&quot;&gt;&lt;a href=&quot;#W3C-HTML-DOM标准&quot; class=&quot;headerlink&quot; title=&quot;W3C HTML DOM标准&quot;&gt;&lt;/a&gt;W3C HTML DOM标准&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1.整个文档是一个文档节点
</summary>
      
    
    
    
    <category term="StudyNote" scheme="https://pckxin.pro/categories/StudyNote/"/>
    
    
    <category term="Note" scheme="https://pckxin.pro/tags/Note/"/>
    
    <category term="前端三剑客" scheme="https://pckxin.pro/tags/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/"/>
    
    <category term="JavaScript" scheme="https://pckxin.pro/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS学习笔记</title>
    <link href="https://pckxin.pro/posts/css-note.html"/>
    <id>https://pckxin.pro/posts/css-note.html</id>
    <published>2022-11-03T01:32:57.000Z</published>
    <updated>2022-11-03T02:38:29.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><pre><code>CSS 指的是“Cascading style sheet” 层叠样式表控制网页外观的语言HTML 是网页结构 CSS 是网页外观 JavaScript是网页的功能行为</code></pre><hr><h1 id="样式表"><a href="#样式表" class="headerlink" title="样式表"></a>样式表</h1><h2 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h2><pre><code>1. 外部样式表2. 内部样式表3. 行内样式表</code></pre><h2 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h2><pre><code>指的是把HTML代码和CSS代码放到同一个HTML文件中语法：&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;</code></pre><h2 id="行内样式表"><a href="#行内样式表" class="headerlink" title="行内样式表"></a>行内样式表</h2><pre><code>内部样式表的CSS是在&quot;style标签&quot;内定义的，而行内样式表的CSS是在&quot;标签的style属性&quot;中来定义的</code></pre><h2 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h2><pre><code>外部样式表在单独文件中定义，然后在HTML文件的&lt;head&gt;&lt;/head&gt;标签中使用link标签引用语法：&lt;link rel=&quot;stylesheet&quot;type=&quot;text/css&quot;href=&quot;文件路径&quot;&gt;外部引入标签<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;地址&quot;&gt;</span><br></pre></td></tr></table></figure>**然后像在内部一样,排行首直接写就行**</code></pre><hr><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><h2 id="说明-amp-语法"><a href="#说明-amp-语法" class="headerlink" title="说明&amp;语法"></a>说明&amp;语法</h2><h3 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h3><pre><code>选择器是一种选择方式，选中你想要的元素的方式，称之为“选择器”在CSS中，有很多可以把你想要元素选中的方式，这些不同的方式其实就是不同的选择器可以用某一种选择器来代替另一种选择器，方式不同，但是目的相同最常用选择器5种:元素选择器，id选择器，class选择器，后代选择器，群组选择器</code></pre><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">. # 元素名&#123;</span><br><span class="line">    属性<span class="number">1</span> : 取值<span class="number">1</span></span><br><span class="line">    ---</span><br><span class="line">    属性n : 取值n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="元素选择器"><a href="#元素选择器" class="headerlink" title="元素选择器"></a>元素选择器</h2><pre><code>元素选择器，就是“选中”相同的元素，然后对相同的元素定义同一个CSS样式</code></pre><h2 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h2><pre><code>用 #XXX&#123;&#125;我们可以为元素设置一个id属性，针对设置了这个id的元素定义CSS样式</code></pre><h2 id="class（类）选择器"><a href="#class（类）选择器" class="headerlink" title="class（类）选择器"></a>class（类）选择器</h2><pre><code>用 .XXX&#123;&#125;class选择器，也就是“类选择器”。我们可以对“相同的元素”或者“不同的元素”定义相同的class属性，然后针对有同一个class的元素进行CSS样式操作。</code></pre><h2 id="id和class区别"><a href="#id和class区别" class="headerlink" title="id和class区别"></a>id和class区别</h2><pre><code>id属性具有唯一性，同一个页面中相同的id只能出现一次class属性不具有唯一性，同一个页面随便用id 像身份证class 像名字</code></pre><h1 id="盒子计算方法"><a href="#盒子计算方法" class="headerlink" title="盒子计算方法"></a>盒子计算方法</h1><pre><code>盒子自身的尺寸：宽高+内边距+边框盒子在页面中占位的尺寸：宽高+内边距+边框+外边距</code></pre><hr><h1 id="样式-属性-amp-布局样式写法-amp-权重"><a href="#样式-属性-amp-布局样式写法-amp-权重" class="headerlink" title="样式(属性)&amp;布局样式写法&amp;权重"></a>样式(属性)&amp;布局样式写法&amp;权重</h1><h2 id="css权重"><a href="#css权重" class="headerlink" title="css权重"></a>css权重</h2><pre><code>样式优先级(权重) 权重越高，优先级越高元素 &lt; class &lt; id &lt; !important !important可以提升样式优先级，但不建议使用 如果!important被用于一个简写的样式属性，那么这条简写的样式属性所代表的子属性都会被应用上!important。 例如：background: blue !important;如果两条样式都使用!important，则权重值高的优先级更高同一个CSS样式你写了两次，后面的会覆盖前面的样式指向同一元素，权重规则生效，权重大的被应用样式指向同一元素，权重规则生效，权重相同时，就近原则生效，后面定义的被应用样式不指向同一元素时，权重规则失效，就近原则生效，离目标元素最近的样式被应用</code></pre><h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><p><code>*&#123;&#125;</code>强调整个页面的属性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*&#123;<span class="attribute">margin</span>: <span class="number">2</span>;<span class="attribute">padding</span>: <span class="number">0</span>;&#125;   <span class="comment">/*强制整个网页外边距为2内边距为零*/</span></span><br></pre></td></tr></table></figure><p><code>list-style-type</code>控制列表项符号</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">list-style-type</span>: none  去掉列表项符号</span><br></pre></td></tr></table></figure><p><code>background-image</code>背景图片</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: <span class="built_in">url</span>();  </span><br></pre></td></tr></table></figure><p><code>background-repeat</code>背景图片重复方式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: no-repeat;     <span class="comment">/*不重复*/</span></span><br></pre></td></tr></table></figure><p><code>background-position</code> 背景图片位置    </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: <span class="number">252px</span> center; <span class="comment">/*水平--252px 垂直居中*/</span></span><br></pre></td></tr></table></figure><p><code>background-position</code>调整背景位置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: right bottom;  <span class="comment">/*右下*/</span></span><br></pre></td></tr></table></figure><p><code>background-size</code>调整背景大小</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-size</span>: <span class="number">50%</span>;  <span class="comment">/*调整背景为50%*/</span></span><br></pre></td></tr></table></figure><p><code>:hover</code> 选择器</p><p>设置鼠标浮上样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="attribute">background-color</span>:yellow;  鼠标浮上变黄</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="导航条和嵌套选择器"><a href="#导航条和嵌套选择器" class="headerlink" title="导航条和嵌套选择器"></a>导航条和嵌套选择器</h3><p>导航条：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">float</span>样式</span><br><span class="line"></span><br><span class="line"><span class="attribute">float</span>: left;  左开始</span><br></pre></td></tr></table></figure><p><code>.XXX ul&#123;&#125;</code>定义的选择器里ul标签样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.top1</span> <span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">list-style-type</span>: none;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">1400px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">background</span>: skyblue;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>.XXX ul li&#123;&#125;</code>定义的选择器里ul标签下li标签样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.top1</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aqua;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><code>.XXX li:hover&#123;&#125;</code>定义选择器内li标签鼠标划过样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.top1</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><code>.XXX .XXX&#123;&#125;</code>嵌套选择器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.top1</span> <span class="selector-class">.li1</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">112px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="这三个搭配可以省略超出内容"><a href="#这三个搭配可以省略超出内容" class="headerlink" title="这三个搭配可以省略超出内容"></a>这三个搭配可以省略超出内容</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-overflow</span>:ellipsis; <span class="comment">/* 超出部分显示省略号 */</span></span><br><span class="line"><span class="attribute">white-space</span>: nowrap; <span class="comment">/*规定段落中的文本不进行换行 */</span></span><br><span class="line"><span class="attribute">overflow</span>: hidden; <span class="comment">/*超出部分隐藏*/</span></span><br></pre></td></tr></table></figure><p><code>overflow:hidden</code>; 自动隐藏超出的文字或图片</p><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><p>让块级元素水平排列</p><p><code>float:left</code>左浮动</p><p><code>float:right</code>右浮动</p><h3 id="显示隐藏"><a href="#显示隐藏" class="headerlink" title="显示隐藏"></a>显示隐藏</h3><h4 id="不占空间隐藏"><a href="#不占空间隐藏" class="headerlink" title="不占空间隐藏"></a>不占空间隐藏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">display</span>: none;</span><br></pre></td></tr></table></figure><h4 id="显示-x2F-将元素显示为块级元素"><a href="#显示-x2F-将元素显示为块级元素" class="headerlink" title="显示 &#x2F; 将元素显示为块级元素"></a>显示 &#x2F; 将元素显示为块级元素</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">display</span>:block</span><br></pre></td></tr></table></figure><h4 id="占空间隐藏"><a href="#占空间隐藏" class="headerlink" title="占空间隐藏"></a>占空间隐藏</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">visibility</span>: hidden;</span><br></pre></td></tr></table></figure><h4 id="显示-x2F-元素可见"><a href="#显示-x2F-元素可见" class="headerlink" title="显示 &#x2F; 元素可见"></a>显示 &#x2F; 元素可见</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">visibility</span>: visible;</span><br></pre></td></tr></table></figure><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><h4 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a>固定定位</h4><p>位置相对浏览器固定，窗口滚动，它也不动</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">position</span>: fixed; </span><br><span class="line"><span class="attribute">left</span>:XXpx;  <span class="comment">/*在固定下面写方位名称和像素值*/</span></span><br></pre></td></tr></table></figure><h4 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a>绝对定位</h4><p>相对于最近已经定位的父级元素，如果父级没有已经定位的元素，相对于 html</p><p>absolute 定位使元素的位置与文档流无关，因此不占据空间。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">position</span>: absolute;  </span><br><span class="line"><span class="attribute">left</span>:XXpx;  <span class="comment">/*在固定下面写方位名称和像素值*/</span></span><br></pre></td></tr></table></figure><h4 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a>相对定位</h4><p>相对于自身定位，就是把自己定在这里</p><p>不脱离文档流</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">position</span>:relative;</span><br></pre></td></tr></table></figure><h3 id="定位层级"><a href="#定位层级" class="headerlink" title="定位层级"></a>定位层级</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">z-index</span>:层数，几层;</span><br></pre></td></tr></table></figure><h2 id="位移"><a href="#位移" class="headerlink" title="位移"></a>位移</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">translate</span>(x位移,y位移)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="缩放"><a href="#缩放" class="headerlink" title="缩放"></a>缩放</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">scale</span>(随便多少数值); 等比例放大缩小</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">scaleX</span>(<span class="number">1.2</span>); 沿着X轴缩放<span class="number">1.2</span>倍</span><br><span class="line"><span class="attribute">transform</span>:<span class="built_in">scale</span>(x,y);x轴与y轴缩放比例可以不一致</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="背景图缩放居中"><a href="#背景图缩放居中" class="headerlink" title="背景图缩放居中"></a>背景图缩放居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-size</span>: 缩放比;</span><br><span class="line"></span><br><span class="line"><span class="attribute">background-position</span>-x: x轴定位  居中写center;</span><br><span class="line"></span><br><span class="line"><span class="attribute">background-position</span>-y: y轴定位  居中写center;</span><br></pre></td></tr></table></figure><h2 id="旋转"><a href="#旋转" class="headerlink" title="旋转"></a>旋转</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">180deg</span>); 沿着Z轴(电脑屏幕)旋转</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>); 沿着X轴旋转</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>); 沿着Y轴旋转</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="input属性"><a href="#input属性" class="headerlink" title="input属性"></a>input属性</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">outline</span>: none;<span class="comment">/*点击去掉边框*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="盒子阴影"><a href="#盒子阴影" class="headerlink" title="盒子阴影"></a>盒子阴影</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">box-shadow</span>: x偏移 y偏移 模糊半径 颜色;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="文字阴影"><a href="#文字阴影" class="headerlink" title="文字阴影"></a>文字阴影</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attribute">text-shadow</span>: x偏移 y偏移 模糊半径 颜色;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="行级变块级元素"><a href="#行级变块级元素" class="headerlink" title="行级变块级元素"></a>行级变块级元素</h2><pre><code>行内标签 限定宽度和高度，让超出部分自动隐藏了在属性里面添加  display:block; 就可以了</code></pre><h1 id="CSS动画"><a href="#CSS动画" class="headerlink" title="CSS动画"></a>CSS动画</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> 关键帧动画</span><br><span class="line"></span><br><span class="line">用法:</span><br><span class="line"></span><br><span class="line">    <span class="attribute">animation</span>: 自定义时间 时间 infinite;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**infinite 重复动画，可选元素**/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="常用样式–持续添加"><a href="#常用样式–持续添加" class="headerlink" title="常用样式–持续添加"></a>常用样式–持续添加</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:宽;</span><br><span class="line">    <span class="attribute">height</span>:高;</span><br><span class="line">    <span class="attribute">border</span>:边框后边三个值 <span class="number">1</span>粗细 <span class="number">2</span>线型 <span class="number">3</span>颜色;</span><br><span class="line">    <span class="attribute">background</span>:背景色;</span><br><span class="line">    <span class="attribute">text-align</span>:center 文本居中;</span><br><span class="line">    <span class="attribute">font-size</span>:字体大小;</span><br><span class="line">    <span class="attribute">font-weight</span>:字体加粗;</span><br><span class="line">    <span class="attribute">font-style</span>:字体类型;</span><br><span class="line">    <span class="attribute">text-indent</span>:文字首行缩进;</span><br><span class="line">    <span class="attribute">line-height</span>:字体行高;</span><br><span class="line">    <span class="attribute">margin</span>:外边距;</span><br><span class="line">    <span class="attribute">padding</span>:内边距;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;  取消下划线 </span><br><span class="line">    <span class="attribute">list-style</span>: none; 列表样式取消</span><br><span class="line">    <span class="attribute">position</span>: absolute;  绝对定位</span><br><span class="line">    <span class="attribute">position</span>: fixed;  固定定位</span><br><span class="line">    <span class="attribute">position</span>: relative; 相对定位</span><br><span class="line">    <span class="attribute">z-index</span>:层数;</span><br><span class="line">    <span class="attribute">float</span>: left; 左浮动</span><br><span class="line">    <span class="attribute">float</span>: right;  右浮动，倒序</span><br><span class="line">    <span class="attribute">background-image</span>:<span class="built_in">url</span>();背景图插入</span><br><span class="line">    <span class="attribute">border-radius</span>:圆角;</span><br><span class="line">    <span class="attribute">text-shadow</span>:文字阴影;</span><br><span class="line">    <span class="attribute">box-shadow</span>:盒子阴影;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">rgba</span>();调背景色透明度</span><br><span class="line">    </span><br><span class="line">    scroll-behavior:smooth; // 页面自带滑动效果</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;CSS 指的是“Cascading style sheet” 层叠样式表
控制网页外观的语言
HTML 是网页结构 CSS </summary>
      
    
    
    
    <category term="StudyNote" scheme="https://pckxin.pro/categories/StudyNote/"/>
    
    
    <category term="Note" scheme="https://pckxin.pro/tags/Note/"/>
    
    <category term="前端三剑客" scheme="https://pckxin.pro/tags/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/"/>
    
    <category term="CSS" scheme="https://pckxin.pro/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>html学习笔记</title>
    <link href="https://pckxin.pro/posts/html-note.html"/>
    <id>https://pckxin.pro/posts/html-note.html</id>
    <published>2022-11-03T01:24:19.000Z</published>
    <updated>2022-11-03T01:30:07.167Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初始标签及其含义"><a href="#初始标签及其含义" class="headerlink" title="初始标签及其含义"></a>初始标签及其含义</h1><h2 id="lt-DOCTYPE-html-gt"><a href="#lt-DOCTYPE-html-gt" class="headerlink" title="&lt; !DOCTYPE html&gt;"></a>&lt; !DOCTYPE html&gt;</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line">是html5标准网页声明， 全称为Document Type HyperText Mark-up Language</span><br><span class="line"></span><br><span class="line">意思为html5标准的主流浏览器都认识这个声明。表明网页采用html5</span><br><span class="line"></span><br><span class="line">声明位于文档中最前面的位置，处于标签之前</span><br><span class="line"></span><br><span class="line">此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">防止中文页面乱码：</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">语法：</span><br><span class="line">    </span><br><span class="line">    &lt;标签符&gt;内容&lt;/标签符&gt;</span><br><span class="line">    标签成对出现，一个开始一个结束</span><br><span class="line">前段开发：</span><br><span class="line"></span><br><span class="line">    三剑客：CSS HTML JavaScript</span><br><span class="line"></span><br><span class="line">    HTML是网页的结构，CSS是网页的外观，JavaScript是网页的行为</span><br><span class="line"></span><br><span class="line">什么是HTML：</span><br><span class="line"></span><br><span class="line">    HTML全称是&quot;Hyper Text Markup Language&quot;(超文本标签语言)</span><br><span class="line"></span><br><span class="line">    它是网页的标准语言。HTML并不是编程语言而是一门描述性标记语言</span><br><span class="line"></span><br><span class="line">    学习HTML就是学习各种标签，学习网页的“骨架”</span><br><span class="line"></span><br><span class="line">    我们也把“标签”说成“元素”</span><br></pre></td></tr></table></figure><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">包含整个HTML文件的所有内容，向搜索引擎表示该页面是html语言</span><br><span class="line"></span><br><span class="line">同时表示语言为英文网站，其&quot;lang&quot;的意思就是“language”，语言的意思</span><br><span class="line"></span><br><span class="line">而“en”即表示english。</span><br></pre></td></tr></table></figure><h2 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">定义当前页面的编码格式，告诉浏览器以什么编码格式解析当前页面，</span><br><span class="line">这里表示改页面用UTF-8编码格式解析</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">用于告知浏览器以何种版本来渲染页面（一般都设置为最新模式），</span><br><span class="line">这里的含义是指定IE浏览器使用最新的IE版本渲染当前页面</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">这里一个针对移动网页优化的标签，width用于设置viewport的宽度，</span><br><span class="line">这里的device-width表示视区宽度就是设备的屏幕宽度，</span><br><span class="line">而initial-scale则控制初始缩放比例，这里的1.0则表示显示的是未经缩放的web页面</span><br></pre></td></tr></table></figure><h1 id="网页结构"><a href="#网页结构" class="headerlink" title="网页结构"></a>网页结构</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>      ---包含整个HTML文件的所有内容，声明该页面是html语言</span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>   ---头部标签</span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span>  ---标题标签</span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  ---CSS样式统一声明标签</span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>   ---块级标签</span><br><span class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span>  ---内容主体标签</span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  ---段落</span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  ---标题标签</span><br><span class="line">            <span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span>   ---下划线</span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>   ---斜体</span><br><span class="line">            <span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span>   ---加粗</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>   ---区域样式标签</span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span>&gt;</span> ---分割线</span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span> ---换行</span><br><span class="line">            <span class="tag">&lt;<span class="name">ol</span>&gt;</span>  ---有序列表</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>   ---列表项</span><br><span class="line">            <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span>   ---无序列表</span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>  ---列表项</span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dl</span>&gt;</span>   ---定义列表</span><br><span class="line">                <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span>   ---列表项</span><br><span class="line">                <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span>   ---列表项定义</span><br><span class="line">            <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>   ---超链接标签</span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;链接&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;为找到描述&quot;</span>&gt;</span>   ---图片标签</span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span>&gt;</span>   ---表格</span><br><span class="line">                <span class="tag">&lt;<span class="name">caption</span>&gt;</span><span class="tag">&lt;/<span class="name">caption</span>&gt;</span>   ---表头</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span>  ---行</span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>   ---列/内容</span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span>&gt;</span>   ---表单类型</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;类型&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span>   ---多行文本框，文本域</span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span>&gt;</span> ---下拉选项列表</span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>  ---选项内容</span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--注释--&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="标签-元素"><a href="#标签-元素" class="headerlink" title="标签(元素)"></a>标签(元素)</h1><h2 id="块级标签"><a href="#块级标签" class="headerlink" title="块级标签"></a>块级标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>~<span class="tag">&lt;<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>td属于行内块类型</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span>表单</span><br></pre></td></tr></table></figure><h2 id="行内块标签"><a href="#行内块标签" class="headerlink" title="行内块标签"></a>行内块标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>更改固定区域文本样式</span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体</span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗</span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>强调倾斜</span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线</span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>强调加粗</span><br></pre></td></tr></table></figure><h2 id="标签属性"><a href="#标签属性" class="headerlink" title="标签属性"></a>标签属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">超链接标签</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">title</span>=<span class="string">&quot;鼠标划过文本&quot;</span> <span class="attr">style</span>=<span class="string">&quot;&quot;</span>&gt;</span>显示文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">target=&quot;_blank&quot;新标签页打开</span><br><span class="line">        &quot;_self&quot; 当前窗口打开，默认值</span><br><span class="line">        &quot;_top&quot; 当前窗口打开</span><br><span class="line">        &quot;_parent&quot; 父窗口，当前窗口？(测试是当前窗口，后期考证不对改）</span><br><span class="line"></span><br><span class="line">图片标签</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片地址&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;未找到图片提示文本&quot;</span> <span class="attr">title</span>=<span class="string">&quot;图片描述，鼠标滑过显示&quot;</span>&gt;</span></span><br><span class="line">../XX/XX    引入本地图</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">一列项目，用数字标记</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;1&quot;</span> <span class="attr">start</span>=<span class="string">&quot;2&quot;</span>&gt;</span> <span class="comment">&lt;!--type是数字类型 start是起始数字--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;A&quot;</span>&gt;</span> <span class="comment">&lt;!--用字母排--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;a&quot;</span>&gt;</span> <span class="comment">&lt;!--用小写字母排--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;I&quot;</span>&gt;</span> <span class="comment">&lt;!--用罗马数字排--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;i&quot;</span>&gt;</span> <span class="comment">&lt;!--用小写罗马数字排--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">默认粗体圆点表示</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;disc&quot;</span>&gt;</span><span class="comment">&lt;!--disc实心黑点--&gt;</span> <span class="comment">&lt;!--默认项--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;square&quot;</span>&gt;</span><span class="comment">&lt;!--square实心方块--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;circle&quot;</span>&gt;</span><span class="comment">&lt;!--circle空心圆环--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">项目和注释组合</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span>  <span class="comment">&lt;!--定义列表开始标签--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>列表项<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表项定义<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">caption</span>&gt;</span>表头<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">cellsapcing=&quot;&quot;    //边框间距 </span><br><span class="line">cellpadding=&quot;&quot;    //框内内边距</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">border-collapse</span>=<span class="string">&quot;collapse&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>1 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>3 <span class="tag">&lt;<span class="name">br</span>&gt;</span> 6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;5px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border:10px solid red&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h1><p>用table包表单，对其更方便</p><p>作用：<br>收集信息，提交给后台<br>常见标签:<code>form</code>,<code>input</code>,<code>textarea</code>,<code>select</code>,<code>option</code></p><h2 id="form标签"><a href="#form标签" class="headerlink" title="form标签"></a><code>form</code>标签</h2><p>将所有表单标签放在里面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;name&quot;</span> <span class="attr">size</span>=<span class="string">&quot;20&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;5&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;password&quot;</span> <span class="attr">size</span>=<span class="string">&quot;40&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;20&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    性别:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;boy&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">cheaked</span>=<span class="string">&quot;cheaked&quot;</span>&gt;</span>男孩</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">value</span>=<span class="string">&quot;girl&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">cheaked</span>=<span class="string">&quot;cheaked&quot;</span>&gt;</span>女孩<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    爱好:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span> <span class="attr">value</span>=<span class="string">&quot;singing&quot;</span>&gt;</span>唱歌</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dance&quot;</span>&gt;</span>跳舞</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span> <span class="attr">value</span>=<span class="string">&quot;tour&quot;</span>&gt;</span>旅行</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="value属性"><a href="#value属性" class="headerlink" title="value属性"></a><code>value</code>属性</h2><pre><code>对于 &quot;button&quot;、&quot;reset&quot;、&quot;submit&quot; 类型 - 定义按钮上的文本对于 &quot;text&quot;、&quot;password&quot;、&quot;hidden&quot; 类型 - 定义输入字段的初始（默认）值对于 &quot;checkbox&quot;、&quot;radio&quot;、&quot;image&quot; 类型 - 定义与input元素相关的值</code></pre><h2 id="input标签"><a href="#input标签" class="headerlink" title="input标签"></a><code>input</code>标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">单行文本框</span><br><span class="line">语法: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">属性：</span><br><span class="line">value: 设定输入字段的初始值</span><br><span class="line">size: 设定文本框的长度</span><br><span class="line">maxlength: 设置文本框最多可输入的字符串</span><br><span class="line">placeholder: 提示文本</span><br><span class="line"></span><br><span class="line">密码文本框</span><br><span class="line">语法：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">单选框：</span><br><span class="line">语法: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;组名&quot;</span> <span class="attr">value</span>=<span class="string">&quot;取值&quot;</span> <span class="attr">cheaked</span>=<span class="string">&quot;选项&quot;</span>&gt;</span></span><br><span class="line">name: 表示单选框所在的组名</span><br><span class="line">value: 定义与元素相关的值</span><br><span class="line">checked: 表示选中的某一选项</span><br><span class="line">placeholder: 提示文本</span><br><span class="line"></span><br><span class="line">复选框:</span><br><span class="line">语法: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;组名&quot;</span> <span class="attr">value</span>=<span class="string">&quot;取值&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">按钮</span><br><span class="line">普通按钮:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;组名（按钮的字）&quot;</span>&gt;</span></span><br><span class="line">提交按钮:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;组名&quot;</span>&gt;</span></span><br><span class="line">重置按钮:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;组名&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">文件上传<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="多行文本框，文本域"><a href="#多行文本框，文本域" class="headerlink" title="多行文本框，文本域"></a>多行文本框，文本域</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">col</span>=<span class="string">&quot;&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;&quot;</span>&gt;</span> cols rows 设置宽高用，用css更准确</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> </span><br></pre></td></tr></table></figure><h2 id="下拉列表"><a href="#下拉列表" class="headerlink" title="下拉列表"></a>下拉列表</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>选项内容<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>选项内容<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span>属性:</span><br><span class="line">multiple 设置下拉列表可选多项</span><br><span class="line">size 设置下拉列表显示几个列表项</span><br><span class="line"><span class="tag">&lt;<span class="name">option</span>&gt;</span>属性：</span><br><span class="line">selected 是否选中</span><br><span class="line">value 选项值</span><br></pre></td></tr></table></figure><h2 id="表单有两个重要属性"><a href="#表单有两个重要属性" class="headerlink" title="表单有两个重要属性"></a>表单有两个重要属性</h2><pre><code>动作和方法，动作指的是数据提交的地址，方法是数据提交的方法提交有两种方法：get  和 post    get提交明文数据在地址栏，传输量少    post数据打包发送，加密，传输量大</code></pre><h1 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&amp;nbsp;一个空格</span><br><span class="line">&amp;ensp;两个空格</span><br><span class="line">&amp;emsp;四个空格</span><br><span class="line"></span><br><span class="line">                红色       绿色       蓝色      白色      黑色</span><br><span class="line">十六进制表达法 | #ff0000 | #00ff00 | #0000ff | ffffff | 000000</span><br><span class="line"></span><br><span class="line">rgb   | rgb(255,0,0) | rgb(0,255,0) | rgb(0,0,255) | rgb(0,255,255) | rgb(0，0，0</span><br></pre></td></tr></table></figure><h2 id="W3C-HTML-DOM标准"><a href="#W3C-HTML-DOM标准" class="headerlink" title="W3C HTML DOM标准"></a>W3C HTML DOM标准</h2><pre><code>1.整个文档是一个文档节点2.每个HTML元素是一个元素节点3.HTML元素内文本是文本节点4.HTML属性是属性节点</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;初始标签及其含义&quot;&gt;&lt;a href=&quot;#初始标签及其含义&quot; class=&quot;headerlink&quot; title=&quot;初始标签及其含义&quot;&gt;&lt;/a&gt;初始标签及其含义&lt;/h1&gt;&lt;h2 id=&quot;lt-DOCTYPE-html-gt&quot;&gt;&lt;a href=&quot;#lt-DOCTYPE-</summary>
      
    
    
    
    <category term="StudyNote" scheme="https://pckxin.pro/categories/StudyNote/"/>
    
    
    <category term="Note" scheme="https://pckxin.pro/tags/Note/"/>
    
    <category term="前端三剑客" scheme="https://pckxin.pro/tags/%E5%89%8D%E7%AB%AF%E4%B8%89%E5%89%91%E5%AE%A2/"/>
    
    <category term="HTML" scheme="https://pckxin.pro/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Hexo插件</title>
    <link href="https://pckxin.pro/posts/memo-01.html"/>
    <id>https://pckxin.pro/posts/memo-01.html</id>
    <published>2022-05-26T12:11:19.000Z</published>
    <updated>2022-08-23T02:23:20.634Z</updated>
    
    <content type="html"><![CDATA[<h2 id="npm源的插件"><a href="#npm源的插件" class="headerlink" title="npm源的插件"></a>npm源的插件</h2><p><a href="https://juejin.cn/post/7079814438299107359">https://juejin.cn/post/7079814438299107359</a>   –读文章</p><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i nrm -g</span><br></pre></td></tr></table></figure><p>查看源镜像列表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm ls</span><br></pre></td></tr></table></figure><p>切换：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nrm use cpnm </span><br></pre></td></tr></table></figure><h2 id="博客渲染插件"><a href="#博客渲染插件" class="headerlink" title="博客渲染插件"></a>博客渲染插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="本地测试的时候需要用hexo-server"><a href="#本地测试的时候需要用hexo-server" class="headerlink" title="本地测试的时候需要用hexo server"></a>本地测试的时候需要用hexo server</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm i hexo-server</span><br></pre></td></tr></table></figure><h2 id="将文章部署到github上的模块"><a href="#将文章部署到github上的模块" class="headerlink" title="将文章部署到github上的模块"></a>将文章部署到github上的模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="安装RSS插件"><a href="#安装RSS插件" class="headerlink" title="安装RSS插件"></a>安装RSS插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h2 id="添加Sitemap-加速网页收录速度"><a href="#添加Sitemap-加速网页收录速度" class="headerlink" title="添加Sitemap,加速网页收录速度"></a>添加Sitemap,加速网页收录速度</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-generator-sitemap --save</span><br><span class="line">cnpm install hexo-generator-baidu-sitemap --save #百度的</span><br></pre></td></tr></table></figure><h2 id="向谷歌、必应、百度提交链接以快速收录"><a href="#向谷歌、必应、百度提交链接以快速收录" class="headerlink" title="向谷歌、必应、百度提交链接以快速收录"></a>向谷歌、必应、百度提交链接以快速收录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-submit-urls-to-search-engine --save</span><br></pre></td></tr></table></figure><h2 id="百度推送"><a href="#百度推送" class="headerlink" title="百度推送"></a>百度推送</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure><h2 id="文章搜索插件"><a href="#文章搜索插件" class="headerlink" title="文章搜索插件"></a>文章搜索插件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><h2 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;npm源的插件&quot;&gt;&lt;a href=&quot;#npm源的插件&quot; class=&quot;headerlink&quot; title=&quot;npm源的插件&quot;&gt;&lt;/a&gt;npm源的插件&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://juejin.cn/post/707981443829910735</summary>
      
    
    
    
    <category term="备忘录" scheme="https://pckxin.pro/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
    
    <category term="Hexo" scheme="https://pckxin.pro/tags/Hexo/"/>
    
    <category term="备忘录" scheme="https://pckxin.pro/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="https://pckxin.pro/posts/markdown.html"/>
    <id>https://pckxin.pro/posts/markdown.html</id>
    <published>2022-05-25T00:40:50.000Z</published>
    <updated>2022-07-31T11:53:48.926Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section"># 一级</span></span><br><span class="line"><span class="section">## 二级</span></span><br><span class="line"><span class="section">### 三级</span></span><br><span class="line"><span class="section">#### 四级</span></span><br><span class="line"><span class="section">##### 五级</span></span><br><span class="line"><span class="section">###### 六级</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">正文直接输入，换行空一行</span><br><span class="line"></span><br><span class="line">换行</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>代码块：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello,world&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码块语法高亮：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(</span><br><span class="line">    <span class="string">&quot;hello,world&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>正文中的代码块 <code>print(&quot;hello,world&quot;)</code></p><hr><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">列表：</span><br><span class="line"></span><br><span class="line">有序列表：</span><br><span class="line"><span class="bullet">   1.</span> 直接输入数字加句点后跟一个空格</span><br><span class="line"><span class="bullet">      1.</span> 多级回车加缩进</span><br><span class="line"></span><br><span class="line">无序列表:</span><br><span class="line"></span><br><span class="line">减号后跟空格</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 123</span><br><span class="line"><span class="bullet">  -</span> 123</span><br><span class="line"><span class="bullet">    -</span> 123</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">字体：</span><br><span class="line"></span><br><span class="line"><span class="strong">**加粗**</span></span><br><span class="line"></span><br><span class="line"><span class="emphasis">*斜体*</span></span><br><span class="line"></span><br><span class="line"><span class="strong">**<span class="emphasis">*加粗斜体*</span>**</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">分割线方法：</span><br><span class="line"></span><br><span class="line">1.<span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"></span></span></span><br><span class="line"><span class="emphasis"><span class="strong">2.---</span></span></span><br><span class="line"><span class="emphasis"><span class="strong"></span></span></span><br></pre></td></tr></table></figure><hr><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">删除线：</span><br><span class="line"></span><br><span class="line">两边加两个~就OK</span><br><span class="line"></span><br><span class="line">记住是英文的符号</span><br><span class="line"></span><br><span class="line">~~lalala~~</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">下划线：</span><br><span class="line"></span><br><span class="line">通过html的 &lt; u &gt; 标签实现</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>用法<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">图片：</span><br><span class="line"></span><br><span class="line">用./来引用本地文件夹的图片</span><br><span class="line"></span><br><span class="line">网络图片用链接</span><br><span class="line"></span><br><span class="line">![<span class="string">图片标题</span>](<span class="link"> ./test01.png &quot;图片链接&quot;</span>)</span><br><span class="line"></span><br><span class="line">调整比例</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">./test01.png</span> <span class="attr">width</span>=<span class="string">50%</span> /&gt;</span></span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight md&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    
    <category term="Note" scheme="https://pckxin.pro/tags/Note/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下VMware安装win10虚拟机教程，以及卡死报错解决方法</title>
    <link href="https://pckxin.pro/posts/ubuntu-skill-01.html"/>
    <id>https://pckxin.pro/posts/ubuntu-skill-01.html</id>
    <published>2022-03-26T12:27:57.000Z</published>
    <updated>2022-08-23T02:21:16.238Z</updated>
    
    <content type="html"><![CDATA[<p>最近改用ubuntu做主系统用了，但是学校教学需要微信，我在编码时还爱用酷狗听音乐，但是这两款软件在linux上兼容不好 <del>(主要是懒的折腾</del></p><p>就想到了开虚拟机装这些软件，但是装虚拟机碰壁了，报错卡死，网上用Ubuntu加VMware装win10的文章很少。</p><p>所以踩了很多坑，折腾了很久，然后就写出了这篇文章来帮大家。</p><h2 id="切换root进入Vmware"><a href="#切换root进入Vmware" class="headerlink" title="切换root进入Vmware"></a>切换root进入Vmware</h2><p><strong>这步很重要，普通方式进去装不上</strong></p><p><strong>1. 切换指令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><p><strong>2. 打开mware</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vmware</span><br></pre></td></tr></table></figure><h2 id="开始创建虚拟机"><a href="#开始创建虚拟机" class="headerlink" title="开始创建虚拟机"></a>开始创建虚拟机</h2><p><strong>注意:Ubuntu的VMware没有中文版</strong></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p><strong>1. 选自定义配置</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P1.png?raw=true" alt="配置"></p><p><strong>2. 版本</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P2.png?raw=true" alt="版本"></p><p><strong>3. 选择镜像的路径</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P3.png?raw=true" alt="路径"></p><p><strong>4. 虚拟机类型</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P4.png?raw=truee" alt="类型"></p><p><strong>5. 存放路径，推荐新建个VMware文件夹来存</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P5.png?raw=true" alt="存放路径"></p><p><strong>6. 启动方式</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P6.png?raw=true" alt="启动方式"></p><p><strong>7. CPU核数和每核的线程数，按自己电脑的一半来</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P7.png?raw=true" alt="CPU"></p><p><strong>8. 内存，给Ubuntu也就是主系统留出最低4G就行</strong>**</p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P8.png?raw=true" alt="内存"></p><p><strong>9. 网络连接方式</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P9.png?raw=true" alt="网络"></p><p><strong>10. 按默认推荐的来就行，也就是后面带(Recommended)的</strong></p><p>如果后面创建失败，就按照图中的来</p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P10.png?raw=true" alt="默认1"><br><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P11.png?raw=true" alt="默认2"></p><p><strong>11. 磁盘大小，按照实际需求</strong></p><p>下面选第二个，做成一个文件，不拉性能</p><p>选第三个好移动但是性能会变低，看你的实际需求</p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P12.png?raw=true" alt="磁盘"></p><p><strong>12. 下一步，启动</strong></p><p><strong>如果正常进系统安装引导，不卡的话，就成功了，卡的话看下面</strong></p><h3 id="卡死-amp-报错"><a href="#卡死-amp-报错" class="headerlink" title="卡死&amp;报错"></a>卡死&amp;报错</h3><p>卡在启动界面，或是卡进去的页面</p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P13.png?raw=true" alt="卡"></p><p>**报错:**error: (svga) ISBRendererComm: Lost connection to mksSandbox</p><p>打开<strong>display</strong>选项</p><p>关掉<strong>3D加速选项</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P14.png?raw=true" alt="3d加速"></p><p><strong>解决进系统👌，愉快的使用吧😘</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/skill/ubuntu/UBUN-P15.png?raw=true" alt="成功"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近改用ubuntu做主系统用了，但是学校教学需要微信，我在编码时还爱用酷狗听音乐，但是这两款软件在linux上兼容不好 &lt;del&gt;(主要是懒的折腾&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;就想到了开虚拟机装这些软件，但是装虚拟机碰壁了，报错卡死，网上用Ubuntu加VMware装win</summary>
      
    
    
    
    <category term="Ubuntu" scheme="https://pckxin.pro/categories/Ubuntu/"/>
    
    
    <category term="Ubuntu" scheme="https://pckxin.pro/tags/Ubuntu/"/>
    
    <category term="报错" scheme="https://pckxin.pro/tags/%E6%8A%A5%E9%94%99/"/>
    
    <category term="虚拟机" scheme="https://pckxin.pro/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Python学习笔记</title>
    <link href="https://pckxin.pro/posts/python-note.html"/>
    <id>https://pckxin.pro/posts/python-note.html</id>
    <published>2021-05-25T00:47:56.000Z</published>
    <updated>2022-08-23T02:27:52.851Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><ol><li>分析问题，明确结果</li><li>思考需要的知识</li><li>思考切入点</li><li>尝试解决一部分</li><li>重复1-4步</li></ol><hr><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p><code>\a</code>  响铃（BEL）</p><p><code>\b</code>退格（BS）将当前位置移动到前一列</p><p><code>\f</code>换页（FF）将当前位置移动到下一页开头</p><p><code>\n</code>换行（LF）将当前位置下行开头</p><p><code>\r</code>回车（CR）将当前位置移动到本行开头</p><p><code>\t</code>水平制表（HT）（跳到下一个TAB位置）</p><p><code>\v</code>垂直制表（VT）</p><p><code>\\</code>代表一个反斜线字符 “&quot;</p><p><code>\&#39;</code>代表一个单引号</p><p><code>\&#39;&#39;</code>代表一个双引号</p><p><code>\0</code>空字符</p><p><code>\ddd</code>1到3位八进制所代表的任意字符</p><p><code>\xhh</code>1到2位十六进制所代表的任意字符</p><hr><h2 id="Print"><a href="#Print" class="headerlink" title="Print"></a>Print</h2><p>Print():  </p><pre><code>单引号不管啥都可打印双引号可以引出内容的标点符号三引号跨行输出具体</code></pre><p><code>/n</code>实现换行:</p><pre><code>Print(XXX,/nXXX,/nXXX)</code></pre><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/Note/print-p1.png?raw=true" alt="print"></p><hr><h2 id="变量-amp-赋值"><a href="#变量-amp-赋值" class="headerlink" title="变量&amp;赋值"></a>变量&amp;赋值</h2><h3 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h3><p>例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&#x27;小埋&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">输出：小埋</span><br></pre></td></tr></table></figure><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&#x27;小埋&#x27;</span></span><br><span class="line">name=<span class="string">&#x27;02&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">输出：02</span><br></pre></td></tr></table></figure><h3 id="变量的命名规范"><a href="#变量的命名规范" class="headerlink" title="变量的命名规范"></a>变量的命名规范</h3><ol><li><p>只能是一个词</p></li><li><p>只能包含字母</p></li><li><p>不能以数字开头</p></li><li><p>尽量描述包含数据的内容</p></li><li><p>不能使用python函数名或关键字</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A = 2  赋值</span><br><span class="line">A == 2 等于</span><br></pre></td></tr></table></figure><hr><h2 id="数据类型-amp-应用-amp-转换"><a href="#数据类型-amp-应用-amp-转换" class="headerlink" title="数据类型&amp;应用&amp;转换"></a>数据类型&amp;应用&amp;转换</h2><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><ol><li><p><strong>字符串（string  -  str）:</strong></p><p> 类型有：现实的词，语句，表达式<br> 必须有引号否则报错<br> 有引号的是字符串，没有的是整数</p></li><li><p><strong>整数（integer  -  int）:</strong></p><p> 不带小数点的数字，正负都可</p></li><li><p><strong>浮点数（float）:</strong></p><p> 带小数点的数字，运算结果存在误差</p></li></ol><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>四则运算：符号</p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/Note/operator-p1.png?raw=true" alt="符号"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XX += 1   #意思是XX =XX+1</span><br></pre></td></tr></table></figure><p><strong>字符串拼接：</strong></p><pre><code>类型相同 +号拼接</code></pre><p><strong>数据类型的查询——type()函数</strong></p><pre><code>例：print(type(&#39;查询的内容&#39;))</code></pre><h3 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h3><p><code>Str()</code>函数：将其他数据类型转换成字符串   （也可用引号转换）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例：number = <span class="number">153</span>，code = <span class="string">&#x27;通行密码&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(who+destination+code+action+<span class="built_in">str</span>(number))</span><br></pre></td></tr></table></figure><p><code>Int()</code>函数：将其他数据类型转换成整数   (直接抹零不做四舍五入处理)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">例：number1 = <span class="string">&#x27;6&#x27;</span>     number2 = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">       <span class="built_in">print</span>(<span class="built_in">int</span>(number1)+<span class="built_in">int</span>(number2))</span><br><span class="line"></span><br><span class="line">浮点形式的字符串 <span class="built_in">print</span>(<span class="built_in">int</span>(<span class="string">&#x27;3.8&#x27;</span>))不能转换，</span><br><span class="line">浮点数 <span class="built_in">print</span>(<span class="built_in">int</span>(<span class="number">3.8</span>))可以</span><br></pre></td></tr></table></figure><p><code>Float()</code> 函数：将其他数据类型转换成浮点数（字符串也可，除文字类字符串😅）</p><hr><h2 id="条件判断-amp-嵌套"><a href="#条件判断-amp-嵌套" class="headerlink" title="条件判断&amp;嵌套"></a>条件判断&amp;嵌套</h2><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><ol><li><strong>单项判断</strong>   <code>if:</code></li></ol><p>#条件后记得跟进英文冒号，回车后自动缩进</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX ：</span><br><span class="line">缩进 <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>双向判断</strong>  <code>if…else… :</code></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(XXXX)</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>多项判断</strong>  <code>if…elif…else… :</code></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#条件1不满足执行</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#同上</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:   <span class="comment">#以上条件都不满足后执行</span></span><br><span class="line">Print(XXXX)</span><br></pre></td></tr></table></figure><h3 id="if嵌套"><a href="#if嵌套" class="headerlink" title="if嵌套"></a>if嵌套</h3><pre><code>if嵌套执行顺序：           #根据层级执行    #缩进相同的命令同等级，一条一条处理        1.先赋值        2.代码组1——不满足60直接跳到代码组2        3.代码组2——代码组1未满足执行</code></pre><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/Note/example-p1.png?raw=true" alt="嵌套例子"></p><hr><h2 id="input-函数"><a href="#input-函数" class="headerlink" title="input()函数"></a>input()函数</h2><p><code>input()</code>函数 <strong>结果必须赋值</strong></p><p><strong>使用：</strong></p><pre><code>input(&#39;XXXX&#39;)#提问&amp;收集数据</code></pre><p><strong>结果赋值：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XXXX = input(&#x27;XXXX&#x27;)</span><br></pre></td></tr></table></figure><p><strong>数据类型：</strong></p><pre><code>input返回的类型是 str(字符串)赋值时需要转换：abc = &#39;XX&#39;</code></pre><p><strong>input输出结果强制转换：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Abc = int(input(&#x27;XXXX&#x27;))</span><br></pre></td></tr></table></figure><h3 id="解题思路例"><a href="#解题思路例" class="headerlink" title="解题思路例"></a>解题思路例</h3><ol><li>函数结果赋值</li><li>搜集信息</li><li>条件判断</li></ol><p>#2.1强制转换 #另一种情况</p><p>#3.1条件判断 #另一种情况</p><ol start="4"><li>条件判断</li><li>输出结果</li></ol><hr><h2 id="列表-amp-字典-amp-元组"><a href="#列表-amp-字典-amp-元组" class="headerlink" title="列表&amp;字典&amp;元组"></a>列表&amp;字典&amp;元组</h2><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/Note/list-p1.png?raw=true" alt="list"></p><p><strong>列表内偏移量起始值为0</strong></p><p><strong>提取单个元素：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A = [01,02,03]</span><br><span class="line">Print(a[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p><strong>提取多个元素:</strong></p><pre><code>切片口诀：左右空，取到头；        左取右不取    #冒号是切片</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">A = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">Print(a[:]) <span class="comment">#打印出[1，2，3，4，5]</span></span><br><span class="line">Print(a[<span class="number">2</span>:]) <span class="comment">#[3，4，5]</span></span><br><span class="line">Print(a[:<span class="number">2</span>]) <span class="comment">#[1，2]</span></span><br><span class="line">Print(a[<span class="number">1</span>:<span class="number">3</span>]) <span class="comment">#[2，3]</span></span><br><span class="line">Print(a[<span class="number">2</span>:<span class="number">4</span>]) <span class="comment">#[3，4]</span></span><br></pre></td></tr></table></figure><p><strong>注：</strong>大小A是一个意思，都是列表A，为了不混淆记忆才这么标的，正式编码时要统一</p><p><strong>列表添加&#x2F;删除元素：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">添加：append()函数</span><br><span class="line">用法：   列表名.append()</span><br><span class="line">注：每次只能增加一个元素</span><br><span class="line"></span><br><span class="line">删除：del 语句</span><br><span class="line">用法： del 列表名[元素的索引（偏移量）]</span><br></pre></td></tr></table></figure><h3 id="数据类型：字典"><a href="#数据类型：字典" class="headerlink" title="数据类型：字典"></a>数据类型：字典</h3><p><strong>与列表不同处：大括号</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/Note/dictionary-p1.png?raw=true" alt="字典"></p><p>字典里的元素由 <code>键值对</code> 组成<br>    #例：’小明’:95  ‘小明’ 叫<strong>键</strong>（key）95叫<strong>值</strong>（value）<br>    字典里一样的键的键值对，后面的会覆盖前面</p><p><code>Len()函数</code> #查询字典或列表长度（元素个数）</p><p><strong>例:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>]</span><br><span class="line">b = &#123;<span class="string">&#x27;明&#x27;</span>:<span class="number">12</span>,<span class="string">&#x27;刚&#x27;</span>:<span class="number">13</span>,<span class="string">&#x27;王&#x27;</span>:<span class="number">14</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(a))   <span class="comment">#结果4</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(b))   <span class="comment">#结果3</span></span><br></pre></td></tr></table></figure><p><strong>增加键值对：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">字典名[&#x27;XXX&#x27;] = 值</span><br><span class="line">例：字典1[&#x27;psp&#x27;] = &#x27;ppspp&#x27;</span><br></pre></td></tr></table></figure><p><strong>删除键值对：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Del 字典名[键]</span><br><span class="line">例：del 字典2[&#x27;03&#x27;]</span><br></pre></td></tr></table></figure><p><strong>字典与列表的异同</strong></p><p><strong>不同点：</strong>列表中元素位置明确，即使元素相同</p><p><strong>相同点：</strong><br>1.修改元素都可用赋值语句完成</p><p>2.支持任意嵌套和互相嵌套例：</p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/Note/difference-p1.png?raw=true" alt="列表字典异同"></p><h3 id="元组tuple"><a href="#元组tuple" class="headerlink" title="元组tuple"></a>元组tuple</h3><p><strong>用小括号包，其他与列表一样</strong></p><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tuple1 = (<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">list2 = [(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>),(<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>),(<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>)]</span><br><span class="line"><span class="built_in">print</span>(tuple1[<span class="number">0</span>])      <span class="comment">#结果：A</span></span><br><span class="line"><span class="built_in">print</span>(list2[<span class="number">1</span>][<span class="number">1</span>])      <span class="comment">#结果：D</span></span><br></pre></td></tr></table></figure><hr><h2 id="循环注"><a href="#循环注" class="headerlink" title="循环注"></a>循环注</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">知道次数优先for循环</span><br><span class="line"></span><br><span class="line">不知道用while循环设置`哨兵`</span><br><span class="line"></span><br><span class="line">#哨兵意思大概是循环极限次数</span><br></pre></td></tr></table></figure><hr><h2 id="for…in循环"><a href="#for…in循环" class="headerlink" title="for…in循环"></a>for…in循环</h2><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="comment"># i在列表里过一遍</span></span><br></pre></td></tr></table></figure><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> o <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>):            </span><br><span class="line"><span class="comment">#range函数输出：0-10</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>+<span class="built_in">str</span>(o)+<span class="string">&#x27;天&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>Range(x)</code>函数:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">从0生成X-1整数序列</span><br><span class="line"></span><br><span class="line">例：range(a,b,c) 从 a 数到 b-1（取头不取尾），间隔为 C</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例：</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>,<span class="number">2</span>)</span><br><span class="line">Print(i)   <span class="comment">#输出0，2，4，6，8</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">range</span>(a,b,c)</span><br><span class="line">a:计数从a开始，不填时，默认从<span class="number">0</span>开始</span><br><span class="line"><span class="comment">#例如:range（1，5）#计数从1开始生成</span></span><br><span class="line">b:计数到b结束，不包括b</span><br><span class="line"><span class="comment">#例如:range(11)#计数从0到11，不包括11</span></span><br><span class="line">c:计数的间隔，不填时默认为<span class="number">1</span></span><br><span class="line"><span class="comment">#例如:range(0，30，5)#计数间隔为5</span></span><br></pre></td></tr></table></figure><h3 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">&#x27;小明&#x27;</span>:<span class="string">&#x27;醋&#x27;</span>,<span class="string">&#x27;小红&#x27;</span>:<span class="string">&#x27;油&#x27;</span>,<span class="string">&#x27;小白&#x27;</span>:<span class="string">&#x27;盐&#x27;</span>,<span class="string">&#x27;小张&#x27;</span>:<span class="string">&#x27;米&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> q <span class="keyword">in</span> d:</span><br><span class="line">    <span class="built_in">print</span>(d[q])</span><br><span class="line"><span class="comment">#输出：醋，油，柴，米</span></span><br></pre></td></tr></table></figure><h4 id="第四种"><a href="#第四种" class="headerlink" title="第四种"></a>第四种</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">8</span>):  <span class="comment"># 为同时能运行两个循环，设新参数 m。</span></span><br><span class="line">    <span class="keyword">if</span> m != <span class="number">4</span>:  <span class="comment"># 当   m != 4，执行打印语句；等于4时不打印。 # ! = 不等于</span></span><br><span class="line">        <span class="built_in">print</span>(m)</span><br></pre></td></tr></table></figure><h3 id="从零到100分别x5"><a href="#从零到100分别x5" class="headerlink" title="从零到100分别x5"></a>从零到100分别x5</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> q <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">print</span>(q*<span class="number">5</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><h3 id="第一种-1"><a href="#第一种-1" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">0</span>          <span class="comment">#先定义变量a，并赋值</span></span><br><span class="line"><span class="keyword">while</span> a &lt; <span class="number">5</span>:   <span class="comment"># 设定一个放行条件：a要小于5，才能办事</span></span><br><span class="line">    a = a + <span class="number">1</span>  <span class="comment"># 满足条件时，就办事：将a+1</span></span><br><span class="line">    <span class="built_in">print</span>(a)   <span class="comment"># 继续办事：将a+1的结果打印出来</span></span><br></pre></td></tr></table></figure><h3 id="第二种-1"><a href="#第二种-1" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">man = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 注：&#x27;&#x27;代表空字符串</span></span><br><span class="line"><span class="keyword">while</span> man != <span class="string">&#x27;有&#x27;</span>:  <span class="comment">#注：!=代表不等于</span></span><br><span class="line">​   man = <span class="built_in">input</span>(<span class="string">&#x27;有没有愿意为小龙女死的男人？没有的话就不能出古墓。&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小龙女可以出古墓门下山啦~&#x27;</span>)</span><br><span class="line">a = <span class="number">0</span>  <span class="comment"># 定义了一个变量a</span></span><br></pre></td></tr></table></figure><h3 id="第三种-1"><a href="#第三种-1" class="headerlink" title="第三种"></a>第三种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> a &lt; <span class="number">5</span>:  <span class="comment"># 当a小于5的时候，就自动执行后续缩进部分的语句</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;现在a的值是：&#x27;</span> + <span class="built_in">str</span>(a))</span><br><span class="line">    <span class="comment">#加一个print看看现在的a是多少</span></span><br><span class="line">    a = a + <span class="number">1</span>  <span class="comment"># 每执行一次循环，变量a的值都加1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;加1后a的值是：&#x27;</span> + <span class="built_in">str</span>(a)) </span><br><span class="line">    <span class="comment">#加一个print看看加1后的a是多少</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><h3 id="从零到100分别x5-1"><a href="#从零到100分别x5-1" class="headerlink" title="从零到100分别x5"></a>从零到100分别x5</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> a&lt;<span class="number">101</span></span><br><span class="line">    a=a+<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(a*<span class="number">5</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="pop-函数"><a href="#pop-函数" class="headerlink" title="pop()函数"></a>pop()函数</h2><p>**提取:**取到元素，对列表没有影响；</p><p>**删除:**删除列表的元素。</p><p>**pop()**函数用于移除列表中的一个元素（默认最后一个元素），并且返回该元素的值。</p><p><strong>语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.pop(obj=list[-1]) </span><br><span class="line">#默认为index=-1，删除最后一个元素。</span><br><span class="line">obj是可选参数，也可以指定元素对象。</span><br></pre></td></tr></table></figure><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">students = [<span class="string">&#x27;小明&#x27;</span>,<span class="string">&#x27;小红&#x27;</span>,<span class="string">&#x27;小刚&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">student1 = students.pop(<span class="number">0</span>)  </span><br><span class="line"><span class="comment"># 运用pop()函数，同时完成提取和删除。</span></span><br><span class="line">students.append(student1)  </span><br><span class="line"><span class="comment"># 将移除的student1安排到最后一个座位。</span></span><br><span class="line"><span class="built_in">print</span>(students)</span><br></pre></td></tr></table></figure><hr><h2 id="布尔值与布尔运算"><a href="#布尔值与布尔运算" class="headerlink" title="布尔值与布尔运算"></a>布尔值与布尔运算</h2><p><strong>用数据做逻辑的过程叫 布尔运算</strong></p><p><strong>运算产生布尔值</strong></p><p>布尔值分 <code>true</code>（真）和 <code>false</code>（假）</p><p><strong>比较运算符：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">等于：  ==</span><br><span class="line">不等于：  !=</span><br><span class="line">大于：  &gt;</span><br><span class="line">小于：  &lt;</span><br><span class="line">大于等于：  &gt;=</span><br><span class="line">小于等于：  &lt;=</span><br></pre></td></tr></table></figure><p><strong>布尔运算：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span>()函数：</span><br><span class="line">括号里放入判断用数据，判断真假</span><br><span class="line">打印出来：</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(XXXX))</span><br></pre></td></tr></table></figure><p><strong>两个数值做比较：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">And:</span><br><span class="line">Ture and true真 </span><br><span class="line">True and false假</span><br><span class="line">False and true假</span><br><span class="line">False and false假</span><br><span class="line"></span><br><span class="line">or:</span><br><span class="line">True and true真</span><br><span class="line">True or false真</span><br><span class="line">False or true真</span><br><span class="line">False or false假</span><br><span class="line"></span><br><span class="line">Not:</span><br><span class="line">Not true假</span><br><span class="line">Not false  真</span><br></pre></td></tr></table></figure><hr><h2 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h2><p><strong>循环内部使用</strong></p><p><code>if…break</code> 意思是满足某一条件，提前结束循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>循环写法：</span><br><span class="line"><span class="keyword">for</span>……<span class="keyword">in</span>……:</span><br><span class="line">…</span><br><span class="line">If ….:</span><br><span class="line">Break</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>循环写法：</span><br><span class="line"><span class="keyword">while</span> XXXX：</span><br><span class="line">…</span><br><span class="line">If …:</span><br><span class="line">Break</span><br></pre></td></tr></table></figure><p><strong>while例子：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">While ture :   <span class="comment">#true是条件恒为真，开启无限循环，搭配break结束</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;上供一对童男童女&#x27;</span>)  </span><br><span class="line">t = <span class="built_in">input</span>(<span class="string">&#x27;孙悟空来了吗&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> t == <span class="string">&#x27;来了&#x27;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;孙悟空制服了鲤鱼精，陈家庄再也不用上供童男童女了&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="concinue语句"><a href="#concinue语句" class="headerlink" title="concinue语句"></a>concinue语句</h2><p>满足条件继续执行下一个，不满足提前重置循环</p><h3 id="continue语句搭配for循环"><a href="#continue语句搭配for循环" class="headerlink" title="continue语句搭配for循环"></a>continue语句搭配for循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>...<span class="keyword">in</span>… :</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> ...:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="continue语句搭配while循环"><a href="#continue语句搭配while循环" class="headerlink" title="continue语句搭配while循环"></a>continue语句搭配while循环</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>...XXXX:</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span> ...:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">..</span><br></pre></td></tr></table></figure><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">q1 = <span class="built_in">input</span>(<span class="string">&#x27;第一问：你喜欢萝莉吗?&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> q1 != <span class="string">&#x27;喜欢&#x27;</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;答对了，行，下面第二问：&#x27;</span>)</span><br><span class="line">q2 = <span class="built_in">input</span>(<span class="string">&#x27;三次元还是二次元的&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> q2 != <span class="string">&#x27;二次元&#x27;</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;答对了，看来是同道中人，下面第三问：&#x27;</span>)</span><br><span class="line">q3 = <span class="built_in">input</span>(<span class="string">&#x27;对三次元萝莉有兴趣吗&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> q3 == <span class="string">&#x27;没有&#x27;</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;欢迎来到萝莉社&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="pass语句"><a href="#pass语句" class="headerlink" title="pass语句"></a>pass语句</h2><p><strong>满足跳过，不满足继续执行</strong></p><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个整数:&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> a &gt;= <span class="number">100</span>:</span><br><span class="line"><span class="keyword">pass</span>        <span class="comment">#大于等于100，终端什么都没有输出，直接结束</span></span><br><span class="line"><span class="keyword">else</span>:         <span class="comment">#反之</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你输入了一个小于100的数字&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="else语句"><a href="#else语句" class="headerlink" title="else语句"></a>else语句</h2><p><strong>else还可搭配for循环和while循环</strong></p><p><strong>注：别跟傻狗似的看见 i 又迷惑了，i 等于缩进下的指令</strong></p><p><strong>注：a 是循环用的，没看见夹中间了吗</strong></p><h3 id="for例"><a href="#for例" class="headerlink" title="for例"></a>for例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入0来结束循环，你有5次机会:&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你触发了break语句，循环结束，导致else语句不会生效。&#x27;</span>)    </span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;5次循环你都错过了，else语句生效了。&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="while例"><a href="#while例" class="headerlink" title="while例"></a>while例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">5</span>:</span><br><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入0结束循环，你有5次机会:&#x27;</span>)) </span><br><span class="line">i = i+<span class="number">1</span></span><br><span class="line">If a == <span class="number">0</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你触发了break语句，导致else语句不会生效。&#x27;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;5次循环你都错过了，else语句生效了。&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>当循环中没有碰到break语句，就会执行循环后面的else语句，否则就不会执行</strong></p><hr><h2 id="import函数"><a href="#import函数" class="headerlink" title="import函数"></a>import函数</h2><p><strong>意：导入模块函数</strong></p><h3 id="上例"><a href="#上例" class="headerlink" title="上例"></a>上例</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time   <span class="comment">#调用time模块</span></span><br><span class="line">time.sleep(secs)   </span><br><span class="line"><span class="comment">#使用time模块下面的sleep()函数,括号里填的是间隔的秒数（seconds，简称secs）</span></span><br><span class="line"><span class="comment">#time.sleep(1.5)就表示停留1.5秒再运行后续代码</span></span><br></pre></td></tr></table></figure><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Random模块下 randint()函数 #随机整数</span><br><span class="line"></span><br><span class="line">用法：random.randint(1,100) #1-100随机整数</span><br><span class="line"></span><br><span class="line">Time模块下 sleep()函数 #间隔时间</span><br></pre></td></tr></table></figure><hr><h2 id="代码视觉优化"><a href="#代码视觉优化" class="headerlink" title="代码视觉优化"></a>代码视觉优化</h2><p><strong>格式化字符串：</strong></p><p><code>%</code>后面有一个字母s，这是一个类型码</p><p>用来控制数据显示的类型。<code>%s</code>就表示先占一个字符串类型的位置</p><h3 id="第一种-2"><a href="#第一种-2" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lucky = <span class="number">8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我的幸运数字是%d&#x27;</span> % lucky)     <span class="comment">#输出：我的幸运数字是8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我的幸运数字是%d&#x27;</span> % <span class="number">8</span>)           <span class="comment">#输出：我的幸运数字是8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我的幸运数字是%s&#x27;</span> % <span class="string">&#x27;816&#x27;</span>)    <span class="comment">#输出：我的幸运数字是816</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我的幸运数字是%d和%d&#x27;</span> % (<span class="number">8</span>,<span class="number">16</span>))    <span class="comment">#输出：我的幸运数字是8和16</span></span><br></pre></td></tr></table></figure><p><code>%</code>后面补上要填的内容，省掉转换类型，多个数据就放进括号</p><p><code>%s</code> 字符串显示</p><p><code>%f</code> 浮点数显示</p><p><code>%d</code> 整数显示</p><h3 id="第二种-更方便"><a href="#第二种-更方便" class="headerlink" title="第二种(更方便)"></a>第二种(更方便)</h3><p><code>format()</code>函数：</p><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">format</span>()格式化函数：<span class="built_in">str</span>.<span class="built_in">format</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#123;&#125;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;数字：&#x27;</span>,<span class="number">0</span>))  <span class="comment"># 优势1：不用担心用错类型码。</span></span><br><span class="line"><span class="comment">#输出：数字：0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;，&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">0</span>,<span class="number">1</span>))  <span class="comment"># 不设置指定位置时，默认按顺序对应。</span></span><br><span class="line"><span class="comment">#输出：0，1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;1&#125;，&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">0</span>,<span class="number">1</span>))  <span class="comment"># 优势2：当设置指定位置时，按指定的对应。</span></span><br><span class="line"><span class="comment">#输出：1，0</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;0&#125;，&#123;1&#125;，&#123;0&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">0</span>,<span class="number">1</span>))  <span class="comment"># 优势3：可多次调用format后的数据。</span></span><br><span class="line"><span class="comment">#输出：0，1，0</span></span><br><span class="line"></span><br><span class="line">name2 =  <span class="string">&#x27;Python基础语法&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我正在学&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name2))  <span class="comment"># format()函数也接受通过参数传入数据。</span></span><br><span class="line"><span class="comment">#输出：我正在学Python基础语法</span></span><br></pre></td></tr></table></figure><hr><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p><strong>函数是组织好的，可以重复使用的，用来实现单一功能的代码</strong></p><h3 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h3><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/Note/function-p1.png?raw=true" alt="函数"></p><p><strong>参数&#x3D;自变量</strong></p><h3 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h3><p><strong>语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def 函数名(参数名):</span><br><span class="line">函数体</span><br><span class="line">return 语句</span><br></pre></td></tr></table></figure><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">math</span>(<span class="params">x</span>):</span><br><span class="line"><span class="comment"># math是自己定义的函数名字（不能与内置函数重名）</span></span><br><span class="line"><span class="comment"># 最好体现意义</span></span><br><span class="line"><span class="comment"># x是自己定义的参数名，括号里参数可多可少，也可不带，命名规则和函数名相同</span></span><br><span class="line"><span class="comment"># 规范别忘带，括号后面还有冒号，运行出错首先检查</span></span><br><span class="line">y = <span class="number">3</span>*x + <span class="number">5</span></span><br><span class="line"><span class="comment"># 函数体：定义函数的功能</span></span><br><span class="line"><span class="keyword">return</span> y</span><br><span class="line"><span class="comment"># 返回结果y</span></span><br></pre></td></tr></table></figure><h3 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h3><p><strong>话不多说，直接上例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">math</span>(<span class="params">x</span>):</span><br><span class="line">y =  x ** <span class="number">2</span> + x</span><br><span class="line"><span class="keyword">return</span> y</span><br><span class="line">x=math(<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 赋值X = math(10)# 这是给X赋值不等于参数x，参数x变成10，并在函数体里过了一遍</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="comment"># 打印出结果</span></span><br><span class="line"></span><br><span class="line">也有这种例子：</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">opening</span>():</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;总有一种味道能温暖你～&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;深夜食堂正式开业啦！&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;欢迎来自五湖四海的你前来品尝!&#x27;</span>)</span><br><span class="line">opening()</span><br><span class="line"><span class="comment">#定义opening()函数固定打印出这三句话</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#也不需要return语句，原因是这个函数直接在屏幕打印出内容，不需要返回值。事实上，没有return语句的函数，Python也会在末尾隐性地加上return None，即返回None值。</span></span><br></pre></td></tr></table></figure><h3 id="参数类型"><a href="#参数类型" class="headerlink" title="参数类型"></a>参数类型</h3><p><strong>【位置参数】上例开讲：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">menu</span>(<span class="params">appetizer, course</span>):</span><br><span class="line"><span class="comment">#感觉像什么，没错，menu函数括号里的是【位置参数】，定义完后期随加随用</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;一份开胃菜：&#x27;</span> + appetizer)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;一份主食：&#x27;</span> + course)</span><br><span class="line">menu(<span class="string">&#x27;话梅花生&#x27;</span>,<span class="string">&#x27;牛肉拉面&#x27;</span>)</span><br><span class="line">menu(<span class="string">&#x27;花生&#x27;</span>,<span class="string">&#x27;面&#x27;</span>)   </span><br><span class="line"><span class="comment">#如果后面括号位置参数的定义更新了，终端会按照定义顺序输出</span></span><br><span class="line">menu(course = <span class="string">&#x27;面&#x27;</span>, appetizer = <span class="string">&#x27;花生&#x27;</span>)</span><br><span class="line"><span class="comment">#如果直接定义了，就忽视顺序，还是按顺序输出</span></span><br></pre></td></tr></table></figure><p><strong>列表传参：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">bala</span>(<span class="params">food</span>):</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> food:</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line">fruits = [<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;cherry&quot;</span>]</span><br><span class="line"></span><br><span class="line">bala(fruits)</span><br><span class="line"><span class="comment">#列表挨个输出</span></span><br></pre></td></tr></table></figure><p><strong>【不定长参数】上例开讲：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">在不知道传递给函数的参数数量时在参数前面加个*号</span><br><span class="line">例：</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">menu</span>(<span class="params">*barbeque</span>):</span><br><span class="line"><span class="comment">#这样就可以传任意长度的参数了</span></span><br></pre></td></tr></table></figure><h3 id="返回多个值"><a href="#返回多个值" class="headerlink" title="返回多个值"></a>返回多个值</h3><p><strong>上例才能理解：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random </span><br><span class="line"><span class="comment">#导入random模块</span></span><br><span class="line">appetizer = [<span class="string">&#x27;话梅花生&#x27;</span>,<span class="string">&#x27;拍黄瓜&#x27;</span>,<span class="string">&#x27;凉拌三丝&#x27;</span>]</span><br><span class="line"><span class="comment">#随机在这里取</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">coupon</span>(<span class="params">money</span>):</span><br><span class="line"><span class="comment">#定义coupon(money)函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> money &lt; <span class="number">5</span>:</span><br><span class="line">a = random.choice(appetizer)</span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line"><span class="comment">#如果参数小于5，返回赋予a的随机值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">elif</span> <span class="number">5</span> &lt;= money &lt; <span class="number">10</span>:</span><br><span class="line">b = random.choice(appetizer)</span><br><span class="line"><span class="keyword">return</span> b, <span class="string">&#x27;溏心蛋&#x27;</span></span><br><span class="line"><span class="comment">#如果大于5小于10，返回赋予b的随机值，和第二个指定值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第一种输出方式：</span></span><br><span class="line">result = coupon(<span class="number">6</span>)</span><br><span class="line"><span class="comment">#定义一个叫result的元组内容等与函数coupon的输出值</span></span><br><span class="line"><span class="comment">#括号里的money参数=6</span></span><br><span class="line"><span class="built_in">print</span>(result[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(result[<span class="number">1</span>])</span><br><span class="line"><span class="comment">#遍历result元组，挨个打印</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第二种输出方式：</span></span><br><span class="line">dish, egg = coupon (<span class="number">7</span>)</span><br><span class="line"><span class="comment">#输出的两个元素分别赋值给变量dish和egg</span></span><br><span class="line"><span class="built_in">print</span>(dish)</span><br><span class="line"><span class="built_in">print</span>(egg)</span><br></pre></td></tr></table></figure><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><p><strong>我去了，读了3个小时才完全理解</strong></p><p><strong>说明：</strong><br>    只有全局变量才能随取随用<br>    第一点：在函数内部赋值的变量仅能在该函数内部使用   叫做：局部作用域，它们被称作【局部变量】<br>    第二点：在所有函数之外赋值的变量，可以在程序的任何位置使用  叫做：全局作用域，它们被称作【全局变量】<br>        注：局部作用域不能用在其他作用域的变量<br><strong>上例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">rent = <span class="number">3000</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cost</span>():</span><br><span class="line"><span class="keyword">global</span> variable_cost</span><br><span class="line"><span class="comment">#global语句，后跟需要声明是全局变量的变量</span></span><br><span class="line">utilities = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入本月的水电费用&#x27;</span>))</span><br><span class="line">food_cost = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入本月的食材费用&#x27;</span>))</span><br><span class="line">variable_cost = utilities + food_cost</span><br><span class="line"><span class="comment">#上面全是全局变量</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;本月的变动成本是&#x27;</span> + <span class="built_in">str</span>(variable_cost))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sum_cost</span>():</span><br><span class="line"><span class="built_in">sum</span> = rent + variable_cost</span><br><span class="line"><span class="comment">#函数下的sum属于局部变量</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;本月的总成本是&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">sum</span>))</span><br><span class="line">cost()</span><br><span class="line">sum_cost()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="函数的嵌套"><a href="#函数的嵌套" class="headerlink" title="函数的嵌套"></a>函数的嵌套</h3><p><strong>上例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">div</span>(<span class="params">num1, num2</span>):</span><br><span class="line">growth = (num1 - num2) / num2</span><br><span class="line">percent = <span class="built_in">str</span>(growth * <span class="number">100</span>) + <span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">return</span> percent</span><br><span class="line"><span class="comment">#一号函数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">warning</span>():</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Error: 你确定上个月一毛钱都不赚不亏吗？&#x27;</span>)</span><br><span class="line"><span class="comment">#二号函数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">num1 = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入本月所获利润&#x27;</span>))</span><br><span class="line">num2 = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入上月所获利润&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> num2 == <span class="number">0</span>:</span><br><span class="line">warning()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;本月的利润增长率：&#x27;</span> + div(num1,num2))</span><br><span class="line">Break</span><br><span class="line"><span class="comment">#三号主函数组，嵌套了一号和二号，按主函数组顺序运行</span></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="练习："><a href="#练习：" class="headerlink" title="练习："></a>练习：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义两个函数：第一个函数功能为根据工作月数返回奖金额，第二个函数功能为打印出&#x27;该员工来了XX个月，获得奖金XXX元&#x27;。</span></span><br><span class="line"><span class="comment">#最后传入参数(&#x27;大聪&#x27;，14)调用第二个函数，打印结果&#x27;大聪来了14个月，获得奖金2520元&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">buff</span>(<span class="params">month</span>):</span><br><span class="line"><span class="keyword">if</span> month&lt;<span class="number">6</span>:</span><br><span class="line">a = <span class="number">500</span></span><br><span class="line"><span class="keyword">return</span> a</span><br><span class="line"><span class="keyword">elif</span> <span class="number">6</span> &lt;= month &lt;= <span class="number">12</span>:</span><br><span class="line">b = month * <span class="number">120</span></span><br><span class="line"><span class="keyword">return</span> b</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">c = month * <span class="number">180</span></span><br><span class="line"><span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gamer</span>():</span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;输入名字：&#x27;</span>)</span><br><span class="line">month = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;干了几个月？&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(name,month,<span class="string">&#x27;个月&#x27;</span>,<span class="string">&#x27;奖金:&#x27;</span>,buff(month))</span><br><span class="line"></span><br><span class="line">gamer()</span><br></pre></td></tr></table></figure><hr><h2 id="index函数"><a href="#index函数" class="headerlink" title="index函数"></a>index函数</h2><p><code>index()</code>函数用于找出列表中某个元素第一次出现的索引位置。</p><p><strong>语法为：列表名字.index(查找对象名字)</strong></p><p><strong>例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">num = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(num.index(<span class="number">1</span>))  <span class="comment"># 数字1首先出现的索引位置是list[1]（索引位置从0开始）</span></span><br><span class="line"><span class="built_in">print</span>(num.index(<span class="number">2</span>))  <span class="comment"># 数字2首先出现的索引位置是list[4]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>可能比较难理解，上大例子：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="comment"># 出拳</span></span><br><span class="line">punches = [<span class="string">&#x27;石头&#x27;</span>,<span class="string">&#x27;剪刀&#x27;</span>,<span class="string">&#x27;布&#x27;</span>]</span><br><span class="line">computer_choice = random.choice(punches)</span><br><span class="line">user_choice = <span class="string">&#x27;&#x27;</span></span><br><span class="line">user_choice = <span class="built_in">input</span>(<span class="string">&#x27;请出拳：（石头、剪刀、布）&#x27;</span>)  <span class="comment"># 请用户输入选择</span></span><br><span class="line"><span class="keyword">while</span> user_choice <span class="keyword">not</span> <span class="keyword">in</span> punches:  <span class="comment"># 当用户输入错误，提示错误，重新输入</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;输入有误，请重新出拳&#x27;</span>)</span><br><span class="line">user_choice = <span class="built_in">input</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 亮拳</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;————战斗过程————&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;电脑出了：%s&#x27;</span> % computer_choice)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你出了：%s&#x27;</span> % user_choice)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 胜负</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;—————结果—————&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> user_choice == computer_choice:  <span class="comment"># 使用if进行条件判断</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;平局！&#x27;</span>)</span><br><span class="line"><span class="comment"># 电脑的选择有3种，索引位置分别是：0石头、1剪刀、2布。</span></span><br><span class="line"><span class="comment"># 假设在电脑索引位置上减1，对应：-1布，0石头，1剪刀，皆胜。</span></span><br><span class="line"><span class="keyword">elif</span> user_choice == punches[punches.index(computer_choice)-<span class="number">1</span>]:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你赢了！&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你输了！&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="try…except语句"><a href="#try…except语句" class="headerlink" title="try…except语句"></a>try…except语句</h2><p><strong>语法：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="comment">#尝试执行下列代码</span></span><br><span class="line">XXX</span><br><span class="line">XXX</span><br><span class="line">Except 报错名称:</span><br><span class="line"><span class="comment">#报错后执行这些</span></span><br><span class="line">XXX</span><br><span class="line">XXX</span><br><span class="line">Except 报错名称:   <span class="comment">#可重复多个报错条件</span></span><br><span class="line">XXX</span><br><span class="line">XXX</span><br><span class="line"></span><br><span class="line">方式<span class="number">2</span>：将两个（或多个）异常放在一起，只要触发其中一个，就执行所包含的代码。</span><br><span class="line"><span class="keyword">except</span>(ZeroDivisionError,ValueError):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你的输入有误，请重新输入！&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">方式<span class="number">3</span>：常规错误的基类，假设不想提供很精细的提示，可以用这个语句响应常规错误。</span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你的输入有误，请重新输入！&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="例子："><a href="#例子：" class="headerlink" title="例子："></a>例子：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">age = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;你今年几岁了？&#x27;</span>))</span><br><span class="line">Break     </span><br><span class="line"><span class="comment">#是整数停止，跳过下面直接执行下段代码</span></span><br><span class="line"><span class="keyword">except</span> ValueError:       </span><br><span class="line"><span class="comment">#输入的不是整数报错后执行</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你输入的不是数字！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> age &lt; <span class="number">18</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;不可以喝酒噢&#x27;</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="debug方法"><a href="#debug方法" class="headerlink" title="debug方法"></a>debug方法</h2><h3 id="自检清单："><a href="#自检清单：" class="headerlink" title="自检清单："></a>自检清单：</h3><ol><li>漏了末尾冒号</li><li>缩进错误</li><li>中英文符号没变</li><li>没有定义变量</li><li>‘&#x3D;&#x3D;’ 和 ‘&#x3D;’ 混用</li><li>字符串拼接时将数字和字符串拼一起了</li></ol><p><strong>解决思路不清：</strong></p><p><strong>#号和 print() 函数搭配使用，一段段检查代码</strong></p><hr><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h3 id="简单总结"><a href="#简单总结" class="headerlink" title="简单总结:"></a>简单总结:</h3><p><strong>类的创建：</strong>class语句</p><p><strong>类的属性创建：</strong>赋值语句</p><p><strong>实例方法的创建：</strong>def 名字(self):</p><p><strong>类的实例化：</strong><code>实例名 = 类名( )</code></p><p><strong>调用类的属性：</strong><code>实例名.属性</code></p><p><strong>调用类的方法：</strong><code>实例名.方法( )</code></p><p>什么什么类的东西</p><p>例如电子设备，list #列表类</p><h3 id="不同点："><a href="#不同点：" class="headerlink" title="不同点："></a>不同点：</h3><p>现实中的类的属性和方法是客观存在的</p><p>编程中类的属性和方法是人工创建的</p><h3 id="类是存在共同点的"><a href="#类是存在共同点的" class="headerlink" title="类是存在共同点的"></a>类是存在共同点的</h3><p>第一种叫<strong>属性(attribute)</strong></p><p>第二种叫<strong>方法(method)</strong></p><pre><code>例如：列表的属性有：外层有中括号，元素之间用英文逗号隔开方法有：都可以做增删改操作（如 append、del等）</code></pre><h3 id="类的创建："><a href="#类的创建：" class="headerlink" title="类的创建："></a>类的创建：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span>:    <span class="comment">#class + 类名 + 冒号</span></span><br><span class="line"></span><br><span class="line">screen = <span class="literal">True</span>    <span class="comment">#属性，通过赋值语句    ， 这句意思是有屏幕</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start</span>(<span class="params">self</span>):    <span class="comment">#方法创建，def + 方法名(self):</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;电脑正在开机中……&#x27;</span>)    <span class="comment">#方法执行过程，也叫能做什么</span></span><br><span class="line">注：实例方法是指类中  参数  带self  的函数，是类方法的一种形式，也是最常用的用法，其他方法可查档</span><br></pre></td></tr></table></figure><h3 id="类的调用："><a href="#类的调用：" class="headerlink" title="类的调用："></a>类的调用：</h3><p><strong>类的实例化：</strong></p><p>在某一个类下创建个实例对象：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语法：实例名 = 类名()</span><br><span class="line">例子：这是想到的实例名 = 这是刚创建的类名加个( )</span><br><span class="line">意义：有了一个可调用 所属类 的 所有属性 和 方法 的实例</span><br></pre></td></tr></table></figure><p><strong>例例例：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">people</span>:</span><br><span class="line"><span class="comment"># 属性:眼睛是黑色的</span></span><br><span class="line">eye = <span class="string">&#x27;black&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法:打印出 &#x27;吃饭，选择用筷子。&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">chpe</span>(<span class="params">self</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;吃饭，选择用筷子。&#x27;</span>)</span><br><span class="line"></span><br><span class="line">my_eye = people()   <span class="comment">#创建了my_eye这个实例，等于people这个类</span></span><br><span class="line"><span class="comment">#也就是类的实例化</span></span><br><span class="line"><span class="comment">#实例数目理论上无限，可以同时多建</span></span><br><span class="line"><span class="built_in">print</span>(my_eye.eye)    <span class="comment">#实例调用属性</span></span><br><span class="line">my_eye.chpe()   <span class="comment">#让实例调用用chpe这个方法</span></span><br></pre></td></tr></table></figure><h3 id="创建类的两个关键点"><a href="#创建类的两个关键点" class="headerlink" title="创建类的两个关键点"></a>创建类的两个关键点</h3><p><strong>特殊参数：self</strong></p><p><strong>作用：</strong>self会接收实例化过程中传入的数据，相当于先给实例占个位置</p><p>想要在类的外部调用类属性格式：<code>self.属性名</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">**例：**</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Chinese</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">greeting</span>(<span class="params">self</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;很高兴遇见你&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">say</span>(<span class="params">self</span>):</span><br><span class="line">self.greeting()    <span class="comment">#person.greeting()</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我来自中国&#x27;</span>)</span><br><span class="line"><span class="comment">#self被传入数据后变成person</span></span><br><span class="line">person = Chinese()</span><br><span class="line"><span class="comment"># 创建实例person</span></span><br><span class="line">person.say()</span><br><span class="line"><span class="comment"># 调用say()方法</span></span><br></pre></td></tr></table></figure><p><strong>初始化方法：</strong></p><p><strong>格式：</strong>def <strong>init</strong>(self)：</p><p><strong>作用：</strong>当每个实例创建时，该方法内代码无需调用就会自动运行</p><hr><h2 id="类的继承-amp-定制"><a href="#类的继承-amp-定制" class="headerlink" title="类的继承&amp;定制"></a>类的继承&amp;定制</h2><p><strong>所有实例的根类：</strong>object</p><pre><code>创建类时不带括号，运行时默认为 class XXX (object): </code></pre><h3 id="各级实例和各级类间的关系："><a href="#各级实例和各级类间的关系：" class="headerlink" title="各级实例和各级类间的关系："></a>各级实例和各级类间的关系：</h3><ol><li>子类创建的实例，同时属于父类</li><li>父类创建的实例，不属于子类</li><li>所有实例，都属于根类object</li></ol><h3 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h3><p><strong>基本语法：</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">people</span>:     <span class="comment">#父级</span></span><br><span class="line"><span class="comment"># 属性:眼睛是黑色的</span></span><br><span class="line">eye = <span class="string">&#x27;black&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 方法:打印出 &#x27;吃饭，选择用筷子。&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">chpe</span>(<span class="params">self</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;吃饭，选择用筷子。&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">people2</span>(<span class="title class_ inherited__">people</span>): </span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承，people有的people2也有</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#验证子类可以继承父类的属性和方法，进而传递给子类的实例</span></span><br><span class="line"></span><br><span class="line">doge = people2 ( )</span><br><span class="line"></span><br><span class="line"><span class="comment"># 子类创建的实例，从子类间接得到了父类的所有属性和方法</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (doge.eye)</span><br><span class="line"></span><br><span class="line"><span class="comment">#可以调用父类的属性</span></span><br><span class="line"></span><br><span class="line">doge.chpe( )</span><br><span class="line"></span><br><span class="line">      <span class="comment">#可以调用父类的方法</span></span><br></pre></td></tr></table></figure><h4 id="函数-isinstance"><a href="#函数-isinstance" class="headerlink" title="函数: isinstance()"></a>函数: <code>isinstance()</code></h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">可以判断某个实例是否属于某个类</span><br><span class="line">用法：</span><br><span class="line">   <span class="built_in">isinstance</span>(实例，类)</span><br><span class="line">例子：</span><br><span class="line">   判断 <span class="number">1</span> 是否属于整数类的实例：</span><br><span class="line">   <span class="built_in">isinstance</span>(<span class="number">1</span>,<span class="built_in">int</span>)</span><br><span class="line">   输出true </span><br></pre></td></tr></table></figure><h4 id="多层继承"><a href="#多层继承" class="headerlink" title="多层继承"></a>多层继承</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   语法：</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">A</span>):</span><br><span class="line">…</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(<span class="title class_ inherited__">B</span>):</span><br><span class="line"></span><br><span class="line">作用：</span><br><span class="line">类在纵向上的深度拓展</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">父亲继承自爷爷，儿子继承自父亲</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">   子类创建的实例，可调用所有层级的父类的属性和方法</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="多重继承"><a href="#多重继承" class="headerlink" title="多重继承"></a>多重继承</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   语法：</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(B,C,D):</span><br><span class="line"></span><br><span class="line">作用：</span><br><span class="line">   类在横向上的宽度拓展</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">儿子同时继承了父母的一些特征</span><br><span class="line"></span><br><span class="line">特点：</span><br><span class="line">   就近原则：在子类调用属性和方法时，优先考虑离得近的子类(即靠左)的父类。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="综合例子"><a href="#综合例子" class="headerlink" title="综合例子"></a>综合例子</h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C0</span>:</span><br><span class="line">    name = <span class="string">&#x27;C0&#x27;</span></span><br><span class="line">   </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C1</span>:</span><br><span class="line">    num = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C2</span>(<span class="title class_ inherited__">C0</span>):  <span class="comment">#多层继承C0</span></span><br><span class="line">    num = <span class="number">2</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C3</span>:</span><br><span class="line">    name = <span class="string">&#x27;C3&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C4</span>(C1,C2,C3):  <span class="comment">#多重继承，优先选择C1</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">out = C4()</span><br><span class="line"><span class="built_in">print</span>(C4.name)  <span class="comment"># 打印出C0</span></span><br><span class="line">   <span class="built_in">print</span>(C4.num)  <span class="comment"># 打印出1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="类的定制"><a href="#类的定制" class="headerlink" title="类的定制"></a>类的定制</h3><h4 id="新增代码"><a href="#新增代码" class="headerlink" title="新增代码"></a>新增代码</h4><p><strong>用法例子：</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Chinese</span>:</span><br><span class="line">eye = <span class="string">&#x27;black&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;吃饭，选择用筷子。&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cantonese</span>(<span class="title class_ inherited__">Chinese</span>):    <span class="comment"># 类的继承</span></span><br><span class="line">native_place = <span class="string">&#x27;guangdong&#x27;</span>    <span class="comment"># 类的定制</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dialect</span>(<span class="params">self</span>):    <span class="comment"># 类的定制</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我们会讲广东话。&#x27;</span>)</span><br><span class="line"></span><br><span class="line">yewen = Cantonese()</span><br><span class="line"><span class="built_in">print</span>(yewen.eye)</span><br><span class="line"><span class="comment"># 父类的属性能用</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(yewen.native_place)</span><br><span class="line"><span class="comment"># 子类的定制属性也能用</span></span><br><span class="line"></span><br><span class="line">yewen.eat()</span><br><span class="line"><span class="comment"># 父类的方法能用</span></span><br><span class="line"></span><br><span class="line">yewen.dialect()</span><br><span class="line"><span class="comment"># 子类的定制方法也能用</span></span><br></pre></td></tr></table></figure><h4 id="重写代码"><a href="#重写代码" class="headerlink" title="重写代码"></a>重写代码</h4><p><strong>用法例子：</strong></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span>:</span><br><span class="line">face = <span class="string">&#x27;serious&#x27;</span></span><br><span class="line">job = <span class="string">&#x27;teacher&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Father</span>:</span><br><span class="line">face = <span class="string">&#x27;sweet&#x27;</span></span><br><span class="line">parenthood = <span class="string">&#x27;dad&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TeacherMore</span>(Teacher, Father):</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FatherMore</span>(Father, Teacher):</span><br><span class="line">       face = <span class="string">&#x27;gentle&#x27;</span>   <span class="comment">#重写了值</span></span><br></pre></td></tr></table></figure><h3 id="综合例"><a href="#综合例" class="headerlink" title="综合例"></a>综合例</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, job=<span class="literal">None</span>, time=<span class="number">0.00</span>, time_effective=<span class="number">0.00</span></span>): </span><br><span class="line">self.name = name</span><br><span class="line">self.job = job</span><br><span class="line">self.time = time</span><br><span class="line">self.time_effective = time_effective</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count_time</span>(<span class="params">self, hour, rate</span>):</span><br><span class="line">self.time += hour</span><br><span class="line">self.time_effective = hour * rate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请你完成子类的定制（包括初始化方法和count_time函数）</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Programmer</span>(<span class="title class_ inherited__">Student</span>):</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">Student.__init__(self, name, job=<span class="string">&#x27;programmer&#x27;</span>, time=<span class="number">0.00</span>, time_effective=<span class="number">0.00</span>)  <span class="comment">#修改job属性</span></span><br><span class="line">        <span class="comment">##</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">count_time</span>(<span class="params">self, hour, rate=<span class="number">1</span></span>):        <span class="comment">#rate修改为默认为1</span></span><br><span class="line">Student.count_time(self, hour, rate)</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 通过两个实例，完成子类和父类的对比（可自行验证）</span></span><br><span class="line">student1 = Student(<span class="string">&#x27;韩梅梅&#x27;</span>)   <span class="comment">#优先传入name</span></span><br><span class="line">student2 = Programmer(<span class="string">&#x27;李雷&#x27;</span>)  <span class="comment">#优先传入name</span></span><br><span class="line"><span class="built_in">print</span>(student1.job)  <span class="comment">#打印出None</span></span><br><span class="line"><span class="built_in">print</span>(student2.job)  <span class="comment">#打印出programmer</span></span><br><span class="line">student1.count_time(<span class="number">10</span>,<span class="number">0.8</span>) </span><br><span class="line">student2.count_time(<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(student1.time_effective)  <span class="comment">#打印出8</span></span><br><span class="line">   <span class="built_in">print</span>(student2.time_effective)  <span class="comment">#打印出10</span></span><br></pre></td></tr></table></figure><hr><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><p><strong>面向对象编程，会将程序看作是一组对象的集合</strong></p><p><img src="https://github.com/PCKxin/ID-0202/blob/master/img/Note/OOP-P1.png?raw=true" alt="OOP"></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">面向对象编程实际上也是一种对代码的封装。</span><br><span class="line">只不过，类能封装更多的东西，既能包含操作数据的方法，</span><br><span class="line">又能包含数据本身。所以，代码的可复用性也更高</span><br><span class="line"></span><br><span class="line">将代码具体的数据和处理方法都封装在类中，</span><br><span class="line">让我们不用完全了解过程也可以调用类中的各种方法。</span><br><span class="line"></span><br><span class="line">这个优势让我们可以在 Python 中轻松地调用各种标准库、第三方库和自定义模块</span><br><span class="line">（可以简单理解成别人写好的类）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">大概就和css里的样式差不多</span><br></pre></td></tr></table></figure><hr><h2 id="str-self"><a href="#str-self" class="headerlink" title="__str__(self):"></a><code>__str__(self):</code></h2><p><strong>特殊方法</strong>:  <code>__str__(self)</code></p><pre><code>使用print打印方法时直接打印方法return的数据，不用调用了</code></pre><h3 id="两个例子"><a href="#两个例子" class="headerlink" title="两个例子:"></a>两个例子:</h3><h4 id="没用-str-self"><a href="#没用-str-self" class="headerlink" title="没用__str__(self)"></a>没用<code>__str__(self)</code></h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Book</span>:</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, author, comment, state = <span class="number">0</span></span>):</span><br><span class="line">self.name = name</span><br><span class="line">self.author = author</span><br><span class="line">self.comment = comment</span><br><span class="line">self.state = state</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_info</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">if</span> self.state == <span class="number">0</span>:</span><br><span class="line">status = <span class="string">&#x27;未借出&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">status = <span class="string">&#x27;已借出&#x27;</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;名称：《%s》 作者：%s 推荐语：%s\n状态：%s &#x27;</span> % (self.name, self.author, self.comment, status)</span><br><span class="line"></span><br><span class="line">book1 = Book(<span class="string">&#x27; 像自由一样美丽 &#x27;</span>, <span class="string">&#x27; 林达 &#x27;</span>, <span class="string">&#x27; 你要用光明来定义黑暗，用黑暗来定义光明 &#x27;</span>) <span class="comment"># 传入参数，创建实例</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>( book1.show_info( ) ) <span class="comment">#调用实例方法show_info()，打印出返回值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="用了-str-self"><a href="#用了-str-self" class="headerlink" title="用了__str__(self)"></a>用了<code>__str__(self)</code></h4><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Book</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, author, comment, state = <span class="number">0</span></span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.author = author</span><br><span class="line">        self.comment = comment</span><br><span class="line">        self.state = state</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.state == <span class="number">0</span>:</span><br><span class="line">            status = <span class="string">&#x27;未借出&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            status = <span class="string">&#x27;已借出&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;名称：《%s》 作者：%s 推荐语：%s\n状态：%s &#x27;</span> % (self.name, self.author, self.comment, status)</span><br><span class="line"></span><br><span class="line">book1 = Book(<span class="string">&#x27; 像自由一样美丽 &#x27;</span>, <span class="string">&#x27; 林达 &#x27;</span>, <span class="string">&#x27; 你要用光明来定义黑暗，用黑暗来定义光明 &#x27;</span>) <span class="comment"># 传入参数，创建实例</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>( book1 )  <span class="comment"># 直接打印对象即可，不能写成print(book1.__str__())</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;headerlink&quot; title=&quot;解题思路&quot;&gt;&lt;/a&gt;解题思路&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;分析问题，明确结果&lt;/li&gt;
&lt;li&gt;思考需要的知识&lt;/li&gt;
&lt;li&gt;思考切入点&lt;/li&gt;
&lt;li&gt;尝试解决一</summary>
      
    
    
    
    <category term="StudyNote" scheme="https://pckxin.pro/categories/StudyNote/"/>
    
    
    <category term="python" scheme="https://pckxin.pro/tags/python/"/>
    
    <category term="Note" scheme="https://pckxin.pro/tags/Note/"/>
    
  </entry>
  
  <entry>
    <title>测试文章</title>
    <link href="https://pckxin.pro/posts/test00.html"/>
    <id>https://pckxin.pro/posts/test00.html</id>
    <published>2021-05-19T10:46:14.000Z</published>
    <updated>2022-06-02T08:13:28.896Z</updated>
    
    <content type="html"><![CDATA[<p><strong>条件判断：</strong></p><p>单项判断   <code>if:</code></p><p>#条件后记得跟进英文冒号，回车后自动缩进</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX ：</span><br><span class="line">缩进 <span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><p>双向判断  <code>if…else… :</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(XXXX)</span><br></pre></td></tr></table></figure><p>多项判断  <code>if…elif…else… :</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> XXXX :</span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#条件1不满足执行</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">elif</span> XXXX:  <span class="comment">#同上</span></span><br><span class="line">Print(XXXX)</span><br><span class="line"><span class="keyword">else</span>:   <span class="comment">#以上条件都不满足后执行</span></span><br><span class="line">Print(XXXX)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;条件判断：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;单项判断   &lt;code&gt;if:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;#条件后记得跟进英文冒号，回车后自动缩进&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla</summary>
      
    
    
    
    <category term="StudyNote" scheme="https://pckxin.pro/categories/StudyNote/"/>
    
    
    <category term="python" scheme="https://pckxin.pro/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://pckxin.pro/posts/Hello-World.html"/>
    <id>https://pckxin.pro/posts/Hello-World.html</id>
    <published>2021-01-26T12:11:19.000Z</published>
    <updated>2022-05-26T13:02:49.159Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
